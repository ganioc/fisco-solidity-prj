package org.com.fisco;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.fisco.bcos.sdk.abi.FunctionEncoder;
import org.fisco.bcos.sdk.abi.FunctionReturnDecoder;
import org.fisco.bcos.sdk.abi.TypeReference;
import org.fisco.bcos.sdk.abi.datatypes.Address;
import org.fisco.bcos.sdk.abi.datatypes.Event;
import org.fisco.bcos.sdk.abi.datatypes.Function;
import org.fisco.bcos.sdk.abi.datatypes.Type;
import org.fisco.bcos.sdk.abi.datatypes.Utf8String;
import org.fisco.bcos.sdk.abi.datatypes.generated.Int256;
import org.fisco.bcos.sdk.abi.datatypes.generated.Uint256;
import org.fisco.bcos.sdk.abi.datatypes.generated.Uint8;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple1;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple9;
import org.fisco.bcos.sdk.client.Client;
import org.fisco.bcos.sdk.contract.Contract;
import org.fisco.bcos.sdk.crypto.CryptoSuite;
import org.fisco.bcos.sdk.crypto.keypair.CryptoKeyPair;
import org.fisco.bcos.sdk.eventsub.EventCallback;
import org.fisco.bcos.sdk.model.CryptoType;
import org.fisco.bcos.sdk.model.TransactionReceipt;
import org.fisco.bcos.sdk.model.callback.TransactionCallback;
import org.fisco.bcos.sdk.transaction.model.exception.ContractException;

@SuppressWarnings("unchecked")
public class PIn extends Contract {
    public static final String[] BINARY_ARRAY = {"","00000000000000000000000000000000000000000000000000815250602001915050600060405180830381600087803b158015610c3757600080fd5b505af1158015610c4b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015610c7557600080fd5b810190808051640100000000811115610c8d57600080fd5b82810190506020810184811115610ca357600080fd5b8151856001820283011164010000000082111715610cc057600080fd5b50509291905050508273ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018281038252600c8152602001807f696e5f74696d655f747970650000000000000000000000000000000000000000815250602001915050602060405180830381600087803b158015610d6857600080fd5b505af1158015610d7c573d6000803e3d6000fd5b505050506040513d6020811015610d9257600080fd5b81019080805190602001909291905050508373ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825260078152602001807f696e5f7479706500000000000000000000000000000000000000000000000000815250602001915050602060405180830381600087803b158015610e4357600080fd5b505af1158015610e57573d6000803e3d6000fd5b505050506040513d6020811015610e6d57600080fd5b81019080805190602001909291905050508473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825260088152602001807f706c6174655f6964000000000000000000000000000000000000000000000000815250602001915050600060405180830381600087803b158015610f1e57600080fd5b505af1158015610f32573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015610f5c57600080fd5b810190808051640100000000811115610f7457600080fd5b82810190506020810184811115610f8a57600080fd5b8151856001820283011164010000000082111715610fa757600080fd5b50509291905050508573ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018281038252600a8152602001807f7072657061795f6c656e00000000000000000000000000000000000000000000815250602001915050602060405180830381600087803b15801561104f57600080fd5b505af1158015611063573d6000803e3d6000fd5b505050506040513d602081101561107957600080fd5b81019080805190602001909291905050508673ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018281038252600c8152602001807f7072657061795f6d6f6e65790000000000000000000000000000000000000000815250602001915050602060405180830381600087803b15801561112a57600080fd5b505af115801561113e573d6000803e3d6000fd5b505050506040513d602081101561115457600080fd5b81019080805190602001909291905050508773ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018281038252600c8152602001807f76656869636c655f747970650000000000000000000000000000000000000000815250602001915050602060405180830381600087803b15801561120557600080fd5b505af1158015611219573d6000803e3d6000fd5b505050506040513d602081101561122f57600080fd5b81019080805190602001909291905050508873ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018281038252600b8152602001807f696e5f7069635f68617368000000000000000000000000000000000000000000815250602001915050600060405180830381600087803b1580156112e057600080fd5b505af11580156112f4573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561131e57600080fd5b81019080805164010000000081111561133657600080fd5b8281019050602081018481111561134c57600080fd5b815185600182028301116401000000008211171561136957600080fd5b50509291905050509a509a509a509a509a509a509a509a509a505b50509193959799909294969850565b60008061140b6040805190810160405280600681526020017f706f735f696e00000000000000000000000000000000000000000000000000008152506040805190810160405280600881526020017f62657274685f69640000000000000000000000000000000000000000000000008152508d6124c6565b905060008173ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561147357600080fd5b505af1158015611487573d6000803e3d6000fd5b505050506040513d602081101561149d57600080fd5b8101908080519060200190929190505050141515611534577f3a66b6d5d90e100fca6d190a0e685c087e9c8e3981966428c8cf5b9512ebd9b86004808111156114e257fe5b33604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a160049150611548565b6115458b8b8b8b8b8b8b8b8b61283c565b91505b509998505050505050505050565b60008054905090565b606060028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115f75780601f106115cc576101008083540402835291602001916115f7565b820191906000526020600020905b8154815290600101906020018083116115da57829003601f168201915b5050505050905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060806000806060600080600060606000806116b26040805190810160405280600681526020017f706f735f696e00000000000000000000000000000000000000000000000000008152506040805190810160405280600881526020017f62657274685f69640000000000000000000000000000000000000000000000008152508e6124c6565b915060008273ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561171a57600080fd5b505af115801561172e573d6000803e3d6000fd5b505050506040513d602081101561174457600080fd5b81019080805190602001909291905050501415156117db5760008060008060006020604051908101604052806000815250949392919060206040519081016040528060008152509493929190849450839350602060405190810160405280600081525092919082925081915080905060206040519081016040528060008152509a509a509a509a509a509a509a509a509a506121a6565b8173ffffffffffffffffffffffffffffffffffffffff1663846719e060006040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b15801561184b57600080fd5b505af115801561185f573d6000803e3d6000fd5b505050506040513d602081101561187557600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825260088152602001807f62657274685f6964000000000000000000000000000000000000000000000000815250602001915050600060405180830381600087803b15801561192857600080fd5b505af115801561193c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561196657600080fd5b81019080805164010000000081111561197e57600080fd5b8281019050602081018481111561199457600080fd5b81518560018202830111640100000000821117156119b157600080fd5b50509291905050508173ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825260078152602001807f696e5f69746d6500000000000000000000000000000000000000000000000000815250602001915050600060405180830381600087803b158015611a5957600080fd5b505af1158015611a6d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015611a9757600080fd5b810190808051640100000000811115611aaf57600080fd5b82810190506020810184811115611ac557600080fd5b8151856001820283011164010000000082111715611ae257600080fd5b50509291905050508273ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018281038252600c8152602001807f696e5f74696d655f747970650000000000000000000000000000000000000000815250602001915050602060405180830381600087803b158015611b8a57600080fd5b505af1158015611b9e573d6000803e3d6000fd5b505050506040513d6020811015611bb457600080fd5b81019080805190602001909291905050508373ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c010000000000000000000000000000","00000000000000000000000000000281526004018080602001828103825260078152602001807f696e5f7479706500000000000000000000000000000000000000000000000000815250602001915050602060405180830381600087803b158015611c6557600080fd5b505af1158015611c79573d6000803e3d6000fd5b505050506040513d6020811015611c8f57600080fd5b81019080805190602001909291905050508473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825260088152602001807f706c6174655f6964000000000000000000000000000000000000000000000000815250602001915050600060405180830381600087803b158015611d4057600080fd5b505af1158015611d54573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015611d7e57600080fd5b810190808051640100000000811115611d9657600080fd5b82810190506020810184811115611dac57600080fd5b8151856001820283011164010000000082111715611dc957600080fd5b50509291905050508573ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018281038252600a8152602001807f7072657061795f6c656e00000000000000000000000000000000000000000000815250602001915050602060405180830381600087803b158015611e7157600080fd5b505af1158015611e85573d6000803e3d6000fd5b505050506040513d6020811015611e9b57600080fd5b81019080805190602001909291905050508673ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018281038252600c8152602001807f7072657061795f6d6f6e65790000000000000000000000000000000000000000815250602001915050602060405180830381600087803b158015611f4c57600080fd5b505af1158015611f60573d6000803e3d6000fd5b505050506040513d6020811015611f7657600080fd5b81019080805190602001909291905050508773ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018281038252600c8152602001807f76656869636c655f747970650000000000000000000000000000000000000000815250602001915050602060405180830381600087803b15801561202757600080fd5b505af115801561203b573d6000803e3d6000fd5b505050506040513d602081101561205157600080fd5b81019080805190602001909291905050508873ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018281038252600b8152602001807f696e5f7069635f68617368000000000000000000000000000000000000000000815250602001915050600060405180830381600087803b15801561210257600080fd5b505af1158015612116573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561214057600080fd5b81019080805164010000000081111561215857600080fd5b8281019050602081018481111561216e57600080fd5b815185600182028301116401000000008211171561218b57600080fd5b50509291905050509a509a509a509a509a509a509a509a509a505b50509193959799909294969850565b60008060006121c3866134b4565b91508173ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561222957600080fd5b505af115801561223d573d6000803e3d6000fd5b505050506040513d602081101561225357600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff1663e44594b986866040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156122f55780820151818401526020810190506122da565b50505050905090810190601f1680156123225780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b15801561234257600080fd5b505af1158015612356573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e8434e396002836040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182810382528481815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561245f5780601f106124345761010080835404028352916020019161245f565b820191906000526020600020905b81548152906001019060200180831161244257829003601f168201915b50509350505050602060405180830381600087803b15801561248057600080fd5b505af1158015612494573d6000803e3d6000fd5b505050506040513d60208110156124aa57600080fd5b8101908080519060200190929190505050925050509392505050565b60008060006124d4866134b4565b91508173ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561253a57600080fd5b505af115801561254e573d6000803e3d6000fd5b505050506040513d602081101561256457600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff1663cd30a1d186866040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808060200180602001838103835285818151815260200191508051906020019080838360005b838110156126045780820151818401526020810190506125e9565b50505050905090810190601f1680156126315780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561266a57808201518184015260208101905061264f565b50505050905090810190601f1680156126975780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b1580156126b857600080fd5b505af11580156126cc573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e8434e396002836040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281038252848181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156127d55780601f106127aa576101008083540402835291602001916127d5565b820191906000526020600020905b8154815290600101906020018083116127b857829003601f168201915b50509350505050602060405180830381600087803b1580156127f657600080fd5b505af115801561280a573d6000803e3d6000fd5b505050506040513d602081101561282057600080fd5b8101908080519060200190929190505050925050509392505050565b600080600061287f6040805190810160405280600681526020017f706f735f696e00000000000000000000000000000000000000000000000000008152506134b4565b91508173ffffffffffffffffffffffffffffffffffffffff166313db93466040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156128e557600080fd5b505af11580156128f9573d6000803e3d6000fd5b505050506040513d602081101561290f57600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff1663e942b5168d6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808060200180602001838103835260088152602001807f62657274685f6964000000000000000000000000000000000000000000000000815250602001838103825284818151815260200191508051906020019080838360005b838110156129e25780820151818401526020810190506129c7565b50505050905090810190601f168015612a0f5780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b158015612a2f57600080fd5b505af1158015612a43573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16638a42ebe96000546040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825260058152602001807f696e64657800000000000000000000000000000000000000000000000000000081525060200192505050600060405180830381600087803b158015612af157600080fd5b505af1158015612b05573d6000803e3d6000fd5b50505050612b116135d3565b8073ffffffffffffffffffffffffffffffffffffffff1663e942b5168c6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808060200180602001838103835260078152602001807f696e5f74696d6500000000000000000000000000000000000000000000000000815250602001838103825284818151815260200191508051906020019080838360005b83811015612bd1578082015181840152602081019050612bb6565b50505050905090810190601f168015612bfe5780820380516001836020036101000a0319168152602001","91505b509350505050600060405180830381600087803b158015612c1e57600080fd5b505af1158015612c32573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16632ef8ba748b6040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018381526020018281038252600c8152602001807f696e5f74696d655f74797065000000000000000000000000000000000000000081525060200192505050600060405180830381600087803b158015612cde57600080fd5b505af1158015612cf2573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16632ef8ba748a6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825260078152602001807f696e5f747970650000000000000000000000000000000000000000000000000081525060200192505050600060405180830381600087803b158015612d9e57600080fd5b505af1158015612db2573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663e942b516896040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808060200180602001838103835260088152602001807f706c6174655f6964000000000000000000000000000000000000000000000000815250602001838103825284818151815260200191508051906020019080838360005b83811015612e76578082015181840152602081019050612e5b565b50505050905090810190601f168015612ea35780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b158015612ec357600080fd5b505af1158015612ed7573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16632ef8ba74886040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018381526020018281038252600a8152602001807f7072657061795f6c656e0000000000000000000000000000000000000000000081525060200192505050600060405180830381600087803b158015612f8357600080fd5b505af1158015612f97573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16632ef8ba74876040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018381526020018281038252600c8152602001807f7072657061795f6d6f6e6579000000000000000000000000000000000000000081525060200192505050600060405180830381600087803b15801561304357600080fd5b505af1158015613057573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16632ef8ba74866040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018381526020018281038252600c8152602001807f76656869636c655f74797065000000000000000000000000000000000000000081525060200192505050600060405180830381600087803b15801561310357600080fd5b505af1158015613117573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663e942b516856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001806020018381038352600b8152602001807f696e5f7069635f68617368000000000000000000000000000000000000000000815250602001838103825284818151815260200191508051906020019080838360005b838110156131db5780820151818401526020810190506131c0565b50505050905090810190601f1680156132085780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b15801561322857600080fd5b505af115801561323c573d6000803e3d6000fd5b5050505060018273ffffffffffffffffffffffffffffffffffffffff166331afac366002846040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281038252848181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156133475780601f1061331c57610100808354040283529160200191613347565b820191906000526020600020905b81548152906001019060200180831161332a57829003601f168201915b50509350505050602060405180830381600087803b15801561336857600080fd5b505af115801561337c573d6000803e3d6000fd5b505050506040513d602081101561339257600080fd5b81019080805190602001909291905050501415613429577f3a66b6d5d90e100fca6d190a0e685c087e9c8e3981966428c8cf5b9512ebd9b8600060048111156133d757fe5b33604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1600092506134a5565b7f3a66b6d5d90e100fca6d190a0e685c087e9c8e3981966428c8cf5b9512ebd9b86001600481111561345757fe5b33604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1600192505b50509998505050505050505050565b60006134be6135e6565b73ffffffffffffffffffffffffffffffffffffffff1663f23f63c9836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561354557808201518184015260208101905061352a565b50505050905090810190601f1680156135725780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561359157600080fd5b505af11580156135a5573d6000803e3d6000fd5b505050506040513d60208110156135bb57600080fd5b81019080805190602001909291905050509050919050565b6000808154809291906001019190505550565b60006110019050905600a165627a7a7230582003bc52e80ffa9407fd2d442bb96a91945c9ab5ab721213a583992810208ab9470029"};

    public static final String BINARY = String.join("", BINARY_ARRAY);

    public static final String[] SM_BINARY_ARRAY = {"","","","91505b509350505050600060405180830381600087803b158015612c1e57600080fd5b505af1158015612c32573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663def426988b6040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018381526020018281038252600c8152602001807f696e5f74696d655f74797065000000000000000000000000000000000000000081525060200192505050600060405180830381600087803b158015612cde57600080fd5b505af1158015612cf2573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663def426988a6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825260078152602001807f696e5f747970650000000000000000000000000000000000000000000000000081525060200192505050600060405180830381600087803b158015612d9e57600080fd5b505af1158015612db2573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16631a391cb4896040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808060200180602001838103835260088152602001807f706c6174655f6964000000000000000000000000000000000000000000000000815250602001838103825284818151815260200191508051906020019080838360005b83811015612e76578082015181840152602081019050612e5b565b50505050905090810190601f168015612ea35780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b158015612ec357600080fd5b505af1158015612ed7573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663def42698886040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018381526020018281038252600a8152602001807f7072657061795f6c656e0000000000000000000000000000000000000000000081525060200192505050600060405180830381600087803b158015612f8357600080fd5b505af1158015612f97573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663def42698876040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018381526020018281038252600c8152602001807f7072657061795f6d6f6e6579000000000000000000000000000000000000000081525060200192505050600060405180830381600087803b15801561304357600080fd5b505af1158015613057573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663def42698866040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018381526020018281038252600c8152602001807f76656869636c655f74797065000000000000000000000000000000000000000081525060200192505050600060405180830381600087803b15801561310357600080fd5b505af1158015613117573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16631a391cb4856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001806020018381038352600b8152602001807f696e5f7069635f68617368000000000000000000000000000000000000000000815250602001838103825284818151815260200191508051906020019080838360005b838110156131db5780820151818401526020810190506131c0565b50505050905090810190601f1680156132085780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b15801561322857600080fd5b505af115801561323c573d6000803e3d6000fd5b5050505060018273ffffffffffffffffffffffffffffffffffffffff16634c6f30c06002846040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281038252848181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156133475780601f1061331c57610100808354040283529160200191613347565b820191906000526020600020905b81548152906001019060200180831161332a57829003601f168201915b50509350505050602060405180830381600087803b15801561336857600080fd5b505af115801561337c573d6000803e3d6000fd5b505050506040513d602081101561339257600080fd5b81019080805190602001909291905050501415613429577f9ce428db80850e033f4cc9e1ae53ad9e8b5c8ff6e7d2eb01616b851eb68bdd1b600060048111156133d757fe5b33604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1600092506134a5565b7f9ce428db80850e033f4cc9e1ae53ad9e8b5c8ff6e7d2eb01616b851eb68bdd1b6001600481111561345757fe5b33604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1600192505b50509998505050505050505050565b60006134be6135e6565b73ffffffffffffffffffffffffffffffffffffffff166359a48b65836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561354557808201518184015260208101905061352a565b50505050905090810190601f1680156135725780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561359157600080fd5b505af11580156135a5573d6000803e3d6000fd5b505050506040513d60208110156135bb57600080fd5b81019080805190602001909291905050509050919050565b6000808154809291906001019190505550565b60006110019050905600a165627a7a723058203ad1a792bc59e2073f3d3aa985994c26601084d561ca85944322039f9d93beaf0029"};

    public static final String SM_BINARY = String.join("", SM_BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"constant\":false,\"inputs\":[{\"name\":\"mIndex\",\"type\":\"int256\"}],\"name\":\"getByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"berthId\",\"type\":\"string\"},{\"name\":\"inTime\",\"type\":\"string\"},{\"name\":\"inTimeType\",\"type\":\"int256\"},{\"name\":\"inType\",\"type\":\"int256\"},{\"name\":\"plateId\",\"type\":\"string\"},{\"name\":\"prepayLen\",\"type\":\"int256\"},{\"name\":\"prepayMoney\",\"type\":\"int256\"},{\"name\":\"vehicleType\",\"type\":\"int256\"},{\"name\":\"inPicHash\",\"type\":\"string\"}],\"name\":\"insertRecord\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLoc\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"berthId\",\"type\":\"string\"}],\"name\":\"getById\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"loc\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"InsertRecordEvent\",\"type\":\"event\"}]"};

    public static final String ABI = String.join("", ABI_ARRAY);

    public static final String FUNC_GETBYINDEX = "getByIndex";

    public static final String FUNC_INSERTRECORD = "insertRecord";

    public static final String FUNC_GETINDEX = "getIndex";

    public static final String FUNC_GETLOC = "getLoc";

    public static final String FUNC_GETOWNER = "getOwner";

    public static final String FUNC_GETBYID = "getById";

    public static final Event INSERTRECORDEVENT_EVENT = new Event("InsertRecordEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Address>() {}));
    ;

    protected PIn(String contractAddress, Client client, CryptoKeyPair credential) {
        super(getBinary(client.getCryptoSuite()), contractAddress, client, credential);
    }

    public static String getBinary(CryptoSuite cryptoSuite) {
        return (cryptoSuite.getCryptoTypeConfig() == CryptoType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public TransactionReceipt getByIndex(BigInteger mIndex) {
        final Function function = new Function(
                FUNC_GETBYINDEX, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(mIndex)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void getByIndex(BigInteger mIndex, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_GETBYINDEX, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(mIndex)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForGetByIndex(BigInteger mIndex) {
        final Function function = new Function(
                FUNC_GETBYINDEX, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(mIndex)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<BigInteger> getGetByIndexInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_GETBYINDEX, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public Tuple9<String, String, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String> getGetByIndexOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_GETBYINDEX, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple9<String, String, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (BigInteger) results.get(2).getValue(), 
                (BigInteger) results.get(3).getValue(), 
                (String) results.get(4).getValue(), 
                (BigInteger) results.get(5).getValue(), 
                (BigInteger) results.get(6).getValue(), 
                (BigInteger) results.get(7).getValue(), 
                (String) results.get(8).getValue()
                );
    }

    public TransactionReceipt insertRecord(String berthId, String inTime, BigInteger inTimeType, BigInteger inType, String plateId, BigInteger prepayLen, BigInteger prepayMoney, BigInteger vehicleType, String inPicHash) {
        final Function function = new Function(
                FUNC_INSERTRECORD, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(berthId), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(inTime), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(inTimeType), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(inType), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(plateId), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(prepayLen), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(prepayMoney), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(vehicleType), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(inPicHash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void insertRecord(String berthId, String inTime, BigInteger inTimeType, BigInteger inType, String plateId, BigInteger prepayLen, BigInteger prepayMoney, BigInteger vehicleType, String inPicHash, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_INSERTRECORD, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(berthId), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(inTime), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(inTimeType), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(inType), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(plateId), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(prepayLen), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(prepayMoney), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(vehicleType), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(inPicHash)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForInsertRecord(String berthId, String inTime, BigInteger inTimeType, BigInteger inType, String plateId, BigInteger prepayLen, BigInteger prepayMoney, BigInteger vehicleType, String inPicHash) {
        final Function function = new Function(
                FUNC_INSERTRECORD, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(berthId), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(inTime), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(inTimeType), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(inType), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(plateId), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(prepayLen), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(prepayMoney), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(vehicleType), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(inPicHash)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple9<String, String, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String> getInsertRecordInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_INSERTRECORD, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple9<String, String, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (BigInteger) results.get(2).getValue(), 
                (BigInteger) results.get(3).getValue(), 
                (String) results.get(4).getValue(), 
                (BigInteger) results.get(5).getValue(), 
                (BigInteger) results.get(6).getValue(), 
                (BigInteger) results.get(7).getValue(), 
                (String) results.get(8).getValue()
                );
    }

    public Tuple1<BigInteger> getInsertRecordOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_INSERTRECORD, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public BigInteger getIndex() throws ContractException {
        final Function function = new Function(FUNC_GETINDEX, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallWithSingleValueReturn(function, BigInteger.class);
    }

    public String getLoc() throws ContractException {
        final Function function = new Function(FUNC_GETLOC, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public String getOwner() throws ContractException {
        final Function function = new Function(FUNC_GETOWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public TransactionReceipt getById(String berthId) {
        final Function function = new Function(
                FUNC_GETBYID, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(berthId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void getById(String berthId, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_GETBYID, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(berthId)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForGetById(String berthId) {
        final Function function = new Function(
                FUNC_GETBYID, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(berthId)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getGetByIdInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_GETBYID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple9<String, String, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String> getGetByIdOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_GETBYID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple9<String, String, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (BigInteger) results.get(2).getValue(), 
                (BigInteger) results.get(3).getValue(), 
                (String) results.get(4).getValue(), 
                (BigInteger) results.get(5).getValue(), 
                (BigInteger) results.get(6).getValue(), 
                (BigInteger) results.get(7).getValue(), 
                (String) results.get(8).getValue()
                );
    }

    public List<InsertRecordEventEventResponse> getInsertRecordEventEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(INSERTRECORDEVENT_EVENT, transactionReceipt);
        ArrayList<InsertRecordEventEventResponse> responses = new ArrayList<InsertRecordEventEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            InsertRecordEventEventResponse typedResponse = new InsertRecordEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.account = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeInsertRecordEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTRECORDEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeInsertRecordEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTRECORDEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public static PIn load(String contractAddress, Client client, CryptoKeyPair credential) {
        return new PIn(contractAddress, client, credential);
    }

    public static PIn deploy(Client client, CryptoKeyPair credential, String loc) throws ContractException {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(loc)));
        return deploy(PIn.class, client, credential, getBinary(client.getCryptoSuite()), encodedConstructor);
    }

    public static class InsertRecordEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret;

        public String account;
    }
}
