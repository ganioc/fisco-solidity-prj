package org.com.fisco;

import java.math.BigInteger;
import java.util.Arrays;
import org.fisco.bcos.sdk.abi.FunctionEncoder;
import org.fisco.bcos.sdk.abi.TypeReference;
import org.fisco.bcos.sdk.abi.datatypes.Address;
import org.fisco.bcos.sdk.abi.datatypes.Function;
import org.fisco.bcos.sdk.abi.datatypes.Type;
import org.fisco.bcos.sdk.abi.datatypes.generated.Uint256;
import org.fisco.bcos.sdk.client.Client;
import org.fisco.bcos.sdk.contract.Contract;
import org.fisco.bcos.sdk.crypto.CryptoSuite;
import org.fisco.bcos.sdk.crypto.keypair.CryptoKeyPair;
import org.fisco.bcos.sdk.model.CryptoType;
import org.fisco.bcos.sdk.transaction.model.exception.ContractException;

@SuppressWarnings("unchecked")
public class PIn extends Contract {
    public static final String[] BINARY_ARRAY = {"608060405234801561001057600080fd5b5060405161050f38038061050f833981018060405281019080805182019291905050508033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600080819055508060029080519060200190610092929190610332565b50506100ac816100b2640100000000026401000000009004565b506103d7565b6100c9610328640100000000026401000000009004565b73ffffffffffffffffffffffffffffffffffffffff166356004b6a6040805190810160405280600681526020017f706f735f696e0000000000000000000000000000000000000000000000000000815250836040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018060200180602001848103845286818151815260200191508051906020019080838360005b8381101561018e578082015181840152602081019050610173565b50505050905090810190601f1680156101bb5780820380516001836020036101000a031916815260200191505b50848103835285818151815260200191508051906020019080838360005b838110156101f45780820151818401526020810190506101d9565b50505050905090810190601f1680156102215780820380516001836020036101000a031916815260200191505b50848103825260658152602001807f62657274685f69642c696e6465782c696e5f74696d652c696e5f74696d655f7481526020017f7970652c696e5f747970652c706c6174655f69642c7072657061795f6c656e2c81526020017f7072657061795f6d6f6e65792c76656869636c655f747970652c696e5f70696381526020017f5f6861736800000000000000000000000000000000000000000000000000000081525060800195505050505050602060405180830381600087803b1580156102e957600080fd5b505af11580156102fd573d6000803e3d6000fd5b505050506040513d602081101561031357600080fd5b81019080805190602001909291905050505050565b6000611001905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061037357805160ff19168380011785556103a1565b828001600101855582156103a1579182015b828111156103a0578251825591602001919060010190610385565b5b5090506103ae91906103b2565b5090565b6103d491905b808211156103d05760008160009055506001016103b8565b5090565b90565b610129806103e66000396000f3006080604052600436106049576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806363a4085214604e578063893d20e8146076575b600080fd5b348015605957600080fd5b50606060ca565b6040518082815260200191505060405180910390f35b348015608157600080fd5b50608860d3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008054905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050905600a165627a7a723058200a0bf33ee996286d1709875f073280105c6c751c30387ef3434947a93d1790f90029"};

    public static final String BINARY = String.join("", BINARY_ARRAY);

    public static final String[] SM_BINARY_ARRAY = {"608060405234801561001057600080fd5b5060405161050f38038061050f833981018060405281019080805182019291905050508033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600080819055508060029080519060200190610092929190610332565b50506100ac816100b2640100000000026401000000009004565b506103d7565b6100c9610328640100000000026401000000009004565b73ffffffffffffffffffffffffffffffffffffffff1663c92a78016040805190810160405280600681526020017f706f735f696e0000000000000000000000000000000000000000000000000000815250836040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018060200180602001848103845286818151815260200191508051906020019080838360005b8381101561018e578082015181840152602081019050610173565b50505050905090810190601f1680156101bb5780820380516001836020036101000a031916815260200191505b50848103835285818151815260200191508051906020019080838360005b838110156101f45780820151818401526020810190506101d9565b50505050905090810190601f1680156102215780820380516001836020036101000a031916815260200191505b50848103825260658152602001807f62657274685f69642c696e6465782c696e5f74696d652c696e5f74696d655f7481526020017f7970652c696e5f747970652c706c6174655f69642c7072657061795f6c656e2c81526020017f7072657061795f6d6f6e65792c76656869636c655f747970652c696e5f70696381526020017f5f6861736800000000000000000000000000000000000000000000000000000081525060800195505050505050602060405180830381600087803b1580156102e957600080fd5b505af11580156102fd573d6000803e3d6000fd5b505050506040513d602081101561031357600080fd5b81019080805190602001909291905050505050565b6000611001905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061037357805160ff19168380011785556103a1565b828001600101855582156103a1579182015b828111156103a0578251825591602001919060010190610385565b5b5090506103ae91906103b2565b5090565b6103d491905b808211156103d05760008160009055506001016103b8565b5090565b90565b610129806103e66000396000f3006080604052600436106049576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806375bfac0214604e578063c624d534146076575b600080fd5b348015605957600080fd5b50606060ca565b6040518082815260200191505060405180910390f35b348015608157600080fd5b50608860d3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008054905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050905600a165627a7a7230582086277aa3bfa79dd86bae2dd4cae241d253096b5de7cc82d51f21361d8fd066200029"};

    public static final String SM_BINARY = String.join("", SM_BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"constant\":true,\"inputs\":[],\"name\":\"getInex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"loc\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]"};

    public static final String ABI = String.join("", ABI_ARRAY);

    public static final String FUNC_GETINEX = "getInex";

    public static final String FUNC_GETOWNER = "getOwner";

    protected PIn(String contractAddress, Client client, CryptoKeyPair credential) {
        super(getBinary(client.getCryptoSuite()), contractAddress, client, credential);
    }

    public static String getBinary(CryptoSuite cryptoSuite) {
        return (cryptoSuite.getCryptoTypeConfig() == CryptoType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public BigInteger getInex() throws ContractException {
        final Function function = new Function(FUNC_GETINEX, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallWithSingleValueReturn(function, BigInteger.class);
    }

    public String getOwner() throws ContractException {
        final Function function = new Function(FUNC_GETOWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public static PIn load(String contractAddress, Client client, CryptoKeyPair credential) {
        return new PIn(contractAddress, client, credential);
    }

    public static PIn deploy(Client client, CryptoKeyPair credential, String loc) throws ContractException {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(loc)));
        return deploy(PIn.class, client, credential, getBinary(client.getCryptoSuite()), encodedConstructor);
    }
}
