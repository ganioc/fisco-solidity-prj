package org.com.fisco;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.fisco.bcos.sdk.abi.FunctionEncoder;
import org.fisco.bcos.sdk.abi.FunctionReturnDecoder;
import org.fisco.bcos.sdk.abi.TypeReference;
import org.fisco.bcos.sdk.abi.datatypes.Address;
import org.fisco.bcos.sdk.abi.datatypes.DynamicArray;
import org.fisco.bcos.sdk.abi.datatypes.Event;
import org.fisco.bcos.sdk.abi.datatypes.Function;
import org.fisco.bcos.sdk.abi.datatypes.Type;
import org.fisco.bcos.sdk.abi.datatypes.Utf8String;
import org.fisco.bcos.sdk.abi.datatypes.generated.Int256;
import org.fisco.bcos.sdk.abi.datatypes.generated.Uint256;
import org.fisco.bcos.sdk.abi.datatypes.generated.Uint8;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple1;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple4;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple9;
import org.fisco.bcos.sdk.client.Client;
import org.fisco.bcos.sdk.contract.Contract;
import org.fisco.bcos.sdk.crypto.CryptoSuite;
import org.fisco.bcos.sdk.crypto.keypair.CryptoKeyPair;
import org.fisco.bcos.sdk.eventsub.EventCallback;
import org.fisco.bcos.sdk.model.CryptoType;
import org.fisco.bcos.sdk.model.TransactionReceipt;
import org.fisco.bcos.sdk.model.callback.TransactionCallback;
import org.fisco.bcos.sdk.transaction.model.exception.ContractException;

@SuppressWarnings("unchecked")
public class TstInV4 extends Contract {
    public static final String[] BINARY_ARRAY = {"","00000000000000000000000000000000000000028152600401610a67906141b9565b602060405180830381600087803b158015610a8157600080fd5b505af1158015610a95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ab99190810190613854565b8673ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610b0c9061416b565b602060405180830381600087803b158015610b2657600080fd5b505af1158015610b3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b5e9190810190613854565b8773ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610bb19061411d565b602060405180830381600087803b158015610bcb57600080fd5b505af1158015610bdf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c039190810190613854565b8873ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610c5690614354565b600060405180830381600087803b158015610c7057600080fd5b505af1158015610c84573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250610cad9190810190613921565b9a509a509a509a509a509a509a509a509a505b50509193959799909294969850565b60008054905090565b606060028054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d705780601f10610d4557610100808354040283529160200191610d70565b820191906000526020600020905b815481529060010190602001808311610d5357829003601f168201915b5050505050905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600060606000806060600080610e8e60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e4c5780601f10610e2157610100808354040283529160200191610e4c565b820191906000526020600020905b815481529060010190602001808311610e2f57829003601f168201915b50505050506040805190810160405280600781526020017f696e5f74696d65000000000000000000000000000000000000000000000000008152508d8d612dac565b9450610f6d60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f295780601f10610efe57610100808354040283529160200191610f29565b820191906000526020600020905b815481529060010190602001808311610f0c57829003601f168201915b50505050508e8e6040805190810160405280600781526020017f696e5f74696d65000000000000000000000000000000000000000000000000008152508f8f6130c1565b935060098473ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610fd557600080fd5b505af1158015610fe9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061100d9190810190613854565b0260405190808252806020026020018201604052801561104157816020015b606081526020019060019003908161102c5790505b509250600091505b8373ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156110ad57600080fd5b505af11580156110c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506110e59190810190613854565b8210156118d4578373ffffffffffffffffffffffffffffffffffffffff1663846719e0836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016111419190613ef5565b602060405180830381600087803b15801561115b57600080fd5b505af115801561116f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111939190810190613802565b90508073ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016111e8906143a9565b600060405180830381600087803b15801561120257600080fd5b505af1158015611216573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061123f9190810190613921565b836009840281518110151561125057fe5b9060200190602002018190525061130a8173ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016112b390614433565b602060405180830381600087803b1580156112cd57600080fd5b505af11580156112e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113059190810190613854565b6133c6565b836001600985020181518110151561131e57fe5b906020019060200201819052506113d88173ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161138190614306565b602060405180830381600087803b15801561139b57600080fd5b505af11580156113af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113d39190810190613854565b6133c6565b83600260098502018151811015156113ec57fe5b906020019060200201819052506114a68173ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161144f90614263565b602060405180830381600087803b15801561146957600080fd5b505af115801561147d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506114a19190810190613854565b6133c6565b83600360098502018151811015156114ba57fe5b906020019060200201819052508073ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161151a906142b1565b600060405180830381600087803b15801561153457600080fd5b505af1158015611548573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506115719190810190613921565b836004600985020181518110151561158557fe5b9060200190602002018190525061163f8173ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016115e8906141b9565b602060405180830381600087803b15801561160257600080fd5b505af1158015611616573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061163a9190810190613854565b6133c6565b836005600985020181518110151561165357fe5b9060200190602002018190525061170d8173ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016116b69061416b565b602060405180830381600087803b1580156116d057600080fd5b505af11580156116e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117089190810190613854565b6133c6565b836006600985020181518110151561172157fe5b906020019060200201819052506117db8173ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016117849061411d565b602060405180830381600087803b15801561179e57600080fd5b505af11580156117b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117d69190810190613854565b6133c6565b83600760098502018151811015156117ef57fe5b906020019060200201819052508073ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161184f90614354565b600060405180830381600087803b15801561186957600080fd5b505af115801561187d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506118a69190810190613921565b83600860098502018151811015156118ba57fe5b906020019060200201819052508180600101925050611049565b8c8c868598509850985098505050505050945094509450949050565b606060008060006060600080600060606000806119a760038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561199c5780601f106119715761010080835404028352916020019161199c565b820191906000526020600020905b81548152906001019060200180831161197f57829003601f168201915b50505050508d612163565b915060008273ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611a0f57600080fd5b505af1158015611a23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611a479190810190613854","","","ffffff811115613a5457600080fd5b613a608c828d016136f0565b9150509295985092959850929598565b600060208284031215613a8257600080fd5b6000613a908482850161379c565b91505092915050565b613aa281614542565b82525050565b6000613ab382614514565b80845260208401935083602082028501613acc856144f5565b60005b84811015613b05578383038852613ae7838351613b97565b9250613af282614535565b9150602088019750600181019050613acf565b508196508694505050505092915050565b613b1f816145e8565b82525050565b613b2e816145fa565b82525050565b613b3d8161460c565b82525050565b613b4c81614578565b82525050565b613b5b8161461e565b82525050565b6000613b6c8261452a565b808452613b8081602086016020860161463f565b613b8981614672565b602085010191505092915050565b6000613ba28261451f565b808452613bb681602086016020860161463f565b613bbf81614672565b602085010191505092915050565b600081546001811660008114613bea5760018114613c0a57613c4b565b607f600283041680865260ff198316602087015260408601935050613c4b565b60028204808652602086019550613c2085614502565b60005b82811015613c4257815481890152600182019150602081019050613c23565b80880195505050505b505092915050565b6000600c82527f76656869636c655f7479706500000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f7072657061795f6d6f6e657900000000000000000000000000000000000000006020830152604082019050919050565b6000600a82527f7072657061795f6c656e000000000000000000000000000000000000000000006020830152604082019050919050565b6000600582527f696e6465780000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600782527f696e5f74797065000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f706c6174655f69640000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f696e5f74696d655f7479706500000000000000000000000000000000000000006020830152604082019050919050565b6000600b82527f696e5f7069635f686173680000000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f62657274685f69640000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f7461626c655f69640000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600782527f696e5f74696d65000000000000000000000000000000000000000000000000006020830152604082019050919050565b613eb981614582565b82525050565b6000602082019050613ed46000830184613a99565b92915050565b6000602082019050613eef6000830184613b34565b92915050565b6000602082019050613f0a6000830184613b43565b92915050565b6000604082019050613f256000830185613b43565b613f326020830184613a99565b9392505050565b6000604082019050613f4e6000830185613b43565b613f5b6020830184613b43565b9392505050565b6000608082019050613f776000830187613b43565b613f846020830186613b43565b613f916040830185613b43565b8181036060830152613fa38184613aa8565b905095945050505050565b6000602082019050613fc36000830184613b52565b92915050565b60006020820190508181036000830152613fe38184613b61565b905092915050565b600060408201905081810360008301526140058185613b61565b90506140146020830184613b16565b9392505050565b600060408201905081810360008301526140358185613b61565b90506140446020830184613b43565b9392505050565b6000610120820190508181036000830152614066818c613b61565b9050614075602083018b613b43565b614082604083018a613b43565b61408f6060830189613b43565b81810360808301526140a18188613b61565b90506140b060a0830187613b43565b6140bd60c0830186613b43565b6140ca60e0830185613b43565b8181036101008301526140dd8184613b61565b90509a9950505050505050505050565b600060408201905081810360008301526141078185613bcd565b90506141166020830184613b25565b9392505050565b6000602082019050818103600083015261413681613c53565b9050919050565b6000604082019050818103600083015261415681613c53565b90506141656020830184613b43565b92915050565b6000602082019050818103600083015261418481613c8a565b9050919050565b600060408201905081810360008301526141a481613c8a565b90506141b36020830184613b43565b92915050565b600060208201905081810360008301526141d281613cc1565b9050919050565b600060408201905081810360008301526141f281613cc1565b90506142016020830184613b43565b92915050565b6000604082019050818103600083015261422081613cf8565b905061422f6020830184613b43565b92915050565b6000604082019050818103600083015261424e81613cf8565b905061425d6020830184613eb0565b92915050565b6000602082019050818103600083015261427c81613d2f565b9050919050565b6000604082019050818103600083015261429c81613d2f565b90506142ab6020830184613b43565b92915050565b600060208201905081810360008301526142ca81613d66565b9050919050565b600060408201905081810360008301526142ea81613d66565b905081810360208301526142fe8184613b61565b905092915050565b6000602082019050818103600083015261431f81613d9d565b9050919050565b6000604082019050818103600083015261433f81613d9d565b905061434e6020830184613b43565b92915050565b6000602082019050818103600083015261436d81613dd4565b9050919050565b6000604082019050818103600083015261438d81613dd4565b905081810360208301526143a18184613b61565b905092915050565b600060208201905081810360008301526143c281613e0b565b9050919050565b600060408201905081810360008301526143e281613e0b565b905081810360208301526143f68184613b61565b905092915050565b6000604082019050818103600083015261441781613e42565b9050818103602083015261442b8184613bcd565b905092915050565b6000602082019050818103600083015261444c81613e79565b9050919050565b6000604082019050818103600083015261446c81613e79565b905061447b6020830184613b43565b92915050565b60006020820190506144966000830184613eb0565b92915050565b6000604051905081810181811067ffffffffffffffff821117156144bf57600080fd5b8060405250919050565b600067ffffffffffffffff8211156144e057600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b60008160005260206000209050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060058210151561457057fe5b819050919050565b6000819050919050565b6000819050919050565b600061459782614542565b9050919050565b60006145a982614542565b9050919050565b60006145bb82614542565b9050919050565b60006145cd82614542565b9050919050565b6000819050919050565b6000819050919050565b60006145f382614542565b9050919050565b600061460582614542565b9050919050565b600061461782614562565b9050919050565b600061462982614578565b9050919050565b82818337600083830152505050565b60005b8381101561465d578082015181840152602081019050614642565b8381111561466c576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a72305820faf9466e88be8fd8c6eb17c541eee436c8a23b45c824829319acb375109eb2ca6c6578706572696d656e74616cf50037"};

    public static final String BINARY = String.join("", BINARY_ARRAY);

    public static final String[] SM_BINARY_ARRAY = {"","ffffffffffffffffffffffff16639bca41e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610a8e9061411d565b600060405180830381600087803b158015610aa857600080fd5b505af1158015610abc573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250610ae59190810190613921565b9a509a509a509a509a509a509a509a509a505b50509193959799909294969850565b60606000806000606060008060006060600080610bbe60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bb35780601f10610b8857610100808354040283529160200191610bb3565b820191906000526020600020905b815481529060010190602001808311610b9657829003601f168201915b50505050508d61234b565b915060008273ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610c2657600080fd5b505af1158015610c3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c5e9190810190613854565b1415610cd2576000806000806000806020604051908101604052806000815250959493929190859550849450839350602060405190810160405280600081525092919082925081915080905060206040519081016040528060008152509a509a509a509a509a509a509a509a509a5061136b565b8173ffffffffffffffffffffffffffffffffffffffff16633dd2b61460006040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610d289190613fae565b602060405180830381600087803b158015610d4257600080fd5b505af1158015610d56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610d7a9190810190613802565b90508073ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610dcf9061426a565b600060405180830381600087803b158015610de957600080fd5b505af1158015610dfd573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250610e269190810190613921565b8173ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610e79906142bf565b602060405180830381600087803b158015610e9357600080fd5b505af1158015610ea7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ecb9190810190613854565b8273ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610f1e90614362565b602060405180830381600087803b158015610f3857600080fd5b505af1158015610f4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610f709190810190613854565b8373ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610fc3906141ce565b602060405180830381600087803b158015610fdd57600080fd5b505af1158015610ff1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506110159190810190613854565b8473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016110689061430d565b600060405180830381600087803b15801561108257600080fd5b505af1158015611096573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506110bf9190810190613921565b8573ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161111290614433565b602060405180830381600087803b15801561112c57600080fd5b505af1158015611140573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111649190810190613854565b8673ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016111b7906143e5565b602060405180830381600087803b1580156111d157600080fd5b505af11580156111e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112099190810190613854565b8773ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161125c9061421c565b602060405180830381600087803b15801561127657600080fd5b505af115801561128a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112ae9190810190613854565b8873ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016113019061411d565b600060405180830381600087803b15801561131b57600080fd5b505af115801561132f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506113589190810190613921565b9a509a509a509a509a509a509a509a509a505b50509193959799909294969850565b60008061142160038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114165780601f106113eb57610100808354040283529160200191611416565b820191906000526020600020905b8154815290600101906020018083116113f957829003601f168201915b50505050508c61234b565b90506000805414806114ce575060008173ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561149457600080fd5b505af11580156114a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506114cc9190810190613854565b145b156114eb576114e48b8b8b8b8b8b8b8b8b612533565b9150611534565b7f9ce428db80850e033f4cc9e1ae53ad9e8b5c8ff6e7d2eb01616b851eb68bdd1b60048081111561151857fe5b33604051611527929190613f10565b60405180910390a1600491505b509998505050505050505050565b60008054905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060028054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561160d5780601f106115e25761010080835404028352916020019161160d565b820191906000526020600020905b8154815290600101906020018083116115f057829003601f168201915b5050505050905090565b60008060006060600080606060008061170160038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116bf5780601f10611694576101008083540402835291602001916116bf565b820191906000526020600020905b8154815290600101906020018083116116a257829003601f168201915b50505050506040805190810160405280600781526020017f696e5f74696d65000000000000000000000000000000000000000000000000008152508d8d612dac565b94506117e060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561179c5780601f106117715761010080835404028352916020019161179c565b820191906000526020600020905b81548152906001019060200180831161177f57829003601f168201915b50505050508e8e6040805190810160405280600781526020017f696e5f74696d65000000000000000000000000000000000000000000000000008152508f8f6130c1565b935060098473ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561184857600080fd5b505af115801561185c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118809190810190613854565b026040519080825280602002602001820160405280156118b457816020015b606081526020019060019003908161189f5790505b509250600091505b8373ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561192057600080fd5b505af1158015611934573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506119589190810190613854565b821015612147578373ffffffffffffffffffffffffffffffffffffffff16633dd2b614836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016119b49190613ef5565b602060405180830381600087803b1580156119ce57600080fd5b505af11580156119e2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611a069190810190613802565b90508073ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c01000000000000000000000000000000000000000000","00000000000000028152600401611a5b9061426a565b600060405180830381600087803b158015611a7557600080fd5b505af1158015611a89573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250611ab29190810190613921565b8360098402815181101515611ac357fe5b90602001906020020181905250611b7d8173ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611b26906142bf565b602060405180830381600087803b158015611b4057600080fd5b505af1158015611b54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611b789190810190613854565b6133c6565b8360016009850201815181101515611b9157fe5b90602001906020020181905250611c4b8173ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611bf490614362565b602060405180830381600087803b158015611c0e57600080fd5b505af1158015611c22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611c469190810190613854565b6133c6565b8360026009850201815181101515611c5f57fe5b90602001906020020181905250611d198173ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611cc2906141ce565b602060405180830381600087803b158015611cdc57600080fd5b505af1158015611cf0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611d149190810190613854565b6133c6565b8360036009850201815181101515611d2d57fe5b906020019060200201819052508073ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611d8d9061430d565b600060405180830381600087803b158015611da757600080fd5b505af1158015611dbb573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250611de49190810190613921565b8360046009850201815181101515611df857fe5b90602001906020020181905250611eb28173ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611e5b90614433565b602060405180830381600087803b158015611e7557600080fd5b505af1158015611e89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611ead9190810190613854565b6133c6565b8360056009850201815181101515611ec657fe5b90602001906020020181905250611f808173ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611f29906143e5565b602060405180830381600087803b158015611f4357600080fd5b505af1158015611f57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611f7b9190810190613854565b6133c6565b8360066009850201815181101515611f9457fe5b9060200190602002018190525061204e8173ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611ff79061421c565b602060405180830381600087803b15801561201157600080fd5b505af1158015612025573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506120499190810190613854565b6133c6565b836007600985020181518110151561206257fe5b906020019060200201819052508073ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016120c29061411d565b600060405180830381600087803b1580156120dc57600080fd5b505af11580156120f0573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506121199190810190613921565b836008600985020181518110151561212d57fe5b9060200190602002018190525081806001019250506118bc565b8c8c868598509850985098505050505050945094509450949050565b6000806000612171856135a4565b91508173ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156121d757600080fd5b505af11580156121eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061220f91908101906137b0565b90508073ffffffffffffffffffffffffffffffffffffffff1663d62b54b4856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016122669190614172565b600060405180830381600087803b15801561228057600080fd5b505af1158015612294573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663d8ac595786836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016122ef929190613feb565b602060405180830381600087803b15801561230957600080fd5b505af115801561231d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061234191908101906137d9565b9250505092915050565b6000806000612359856135a4565b91508173ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156123bf57600080fd5b505af11580156123d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506123f791908101906137b0565b90508073ffffffffffffffffffffffffffffffffffffffff1663ae763db5856040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161244e919061428a565b600060405180830381600087803b15801561246857600080fd5b505af115801561247c573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663d8ac595786836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016124d7929190613feb565b602060405180830381600087803b1580156124f157600080fd5b505af1158015612505573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061252991908101906137d9565b9250505092915050565b60008060006125db60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156125d15780601f106125a6576101008083540402835291602001916125d1565b820191906000526020600020905b8154815290600101906020018083116125b457829003601f168201915b50505050506135a4565b91508173ffffffffffffffffffffffffffffffffffffffff16635887ab246040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561264157600080fd5b505af1158015612655573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506126799190810190613802565b90508073ffffffffffffffffffffffffffffffffffffffff16631a391cb460036040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016126d191906143b0565b600060405180830381600087803b1580156126eb57600080fd5b505af11580156126ff573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16631a391cb48d6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612758919061428a565b600060405180830381600087803b15801561277257600080fd5b505af1158015612786573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663f2f4ee6d6000546040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016127e191906141a0565b600060405180830381600087803b1580156127fb57600080fd5b505af115801561280f573d6000803e3d6000fd5b5050505061281b61365b565b8073ffffffffffffffffffffffffffffffffffffffff1663def426988c6040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161287091906142df565b600060405180830381600087803b15801561288a57600080fd5b505af115801561289e573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663def426988b6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016128f79190614382565b600060405180830381600087803b15801561291157600080fd5b505af1158015612925573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663def426988a6040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161297e91906141ee565b600060405180830381600087803b15801561299857600080fd5b505af11580156129ac573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16631a391cb4896040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612a05919061432d565b600060405180830381600087803b158015612a1f57600080fd5b505af1158015612a33573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffff","","ffffff811115613a5457600080fd5b613a608c828d016136f0565b9150509295985092959850929598565b600060208284031215613a8257600080fd5b6000613a908482850161379c565b91505092915050565b613aa281614542565b82525050565b6000613ab382614514565b80845260208401935083602082028501613acc856144f5565b60005b84811015613b05578383038852613ae7838351613b97565b9250613af282614535565b9150602088019750600181019050613acf565b508196508694505050505092915050565b613b1f816145e8565b82525050565b613b2e816145fa565b82525050565b613b3d8161460c565b82525050565b613b4c81614578565b82525050565b613b5b8161461e565b82525050565b6000613b6c8261452a565b808452613b8081602086016020860161463f565b613b8981614672565b602085010191505092915050565b6000613ba28261451f565b808452613bb681602086016020860161463f565b613bbf81614672565b602085010191505092915050565b600081546001811660008114613bea5760018114613c0a57613c4b565b607f600283041680865260ff198316602087015260408601935050613c4b565b60028204808652602086019550613c2085614502565b60005b82811015613c4257815481890152600182019150602081019050613c23565b80880195505050505b505092915050565b6000600b82527f696e5f7069635f686173680000000000000000000000000000000000000000006020830152604082019050919050565b6000600582527f696e6465780000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600782527f696e5f74797065000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f76656869636c655f7479706500000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f62657274685f69640000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600782527f696e5f74696d65000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f706c6174655f69640000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f696e5f74696d655f7479706500000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f7461626c655f69640000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f7072657061795f6d6f6e657900000000000000000000000000000000000000006020830152604082019050919050565b6000600a82527f7072657061795f6c656e000000000000000000000000000000000000000000006020830152604082019050919050565b613eb981614582565b82525050565b6000602082019050613ed46000830184613a99565b92915050565b6000602082019050613eef6000830184613b34565b92915050565b6000602082019050613f0a6000830184613b43565b92915050565b6000604082019050613f256000830185613b43565b613f326020830184613a99565b9392505050565b6000604082019050613f4e6000830185613b43565b613f5b6020830184613b43565b9392505050565b6000608082019050613f776000830187613b43565b613f846020830186613b43565b613f916040830185613b43565b8181036060830152613fa38184613aa8565b905095945050505050565b6000602082019050613fc36000830184613b52565b92915050565b60006020820190508181036000830152613fe38184613b61565b905092915050565b600060408201905081810360008301526140058185613b61565b90506140146020830184613b16565b9392505050565b600060408201905081810360008301526140358185613b61565b90506140446020830184613b43565b9392505050565b6000610120820190508181036000830152614066818c613b61565b9050614075602083018b613b43565b614082604083018a613b43565b61408f6060830189613b43565b81810360808301526140a18188613b61565b90506140b060a0830187613b43565b6140bd60c0830186613b43565b6140ca60e0830185613b43565b8181036101008301526140dd8184613b61565b90509a9950505050505050505050565b600060408201905081810360008301526141078185613bcd565b90506141166020830184613b25565b9392505050565b6000602082019050818103600083015261413681613c53565b9050919050565b6000604082019050818103600083015261415681613c53565b9050818103602083015261416a8184613b61565b905092915050565b6000604082019050818103600083015261418b81613c8a565b905061419a6020830184613b43565b92915050565b600060408201905081810360008301526141b981613c8a565b90506141c86020830184613eb0565b92915050565b600060208201905081810360008301526141e781613cc1565b9050919050565b6000604082019050818103600083015261420781613cc1565b90506142166020830184613b43565b92915050565b6000602082019050818103600083015261423581613cf8565b9050919050565b6000604082019050818103600083015261425581613cf8565b90506142646020830184613b43565b92915050565b6000602082019050818103600083015261428381613d2f565b9050919050565b600060408201905081810360008301526142a381613d2f565b905081810360208301526142b78184613b61565b905092915050565b600060208201905081810360008301526142d881613d66565b9050919050565b600060408201905081810360008301526142f881613d66565b90506143076020830184613b43565b92915050565b6000602082019050818103600083015261432681613d9d565b9050919050565b6000604082019050818103600083015261434681613d9d565b9050818103602083015261435a8184613b61565b905092915050565b6000602082019050818103600083015261437b81613dd4565b9050919050565b6000604082019050818103600083015261439b81613dd4565b90506143aa6020830184613b43565b92915050565b600060408201905081810360008301526143c981613e0b565b905081810360208301526143dd8184613bcd565b905092915050565b600060208201905081810360008301526143fe81613e42565b9050919050565b6000604082019050818103600083015261441e81613e42565b905061442d6020830184613b43565b92915050565b6000602082019050818103600083015261444c81613e79565b9050919050565b6000604082019050818103600083015261446c81613e79565b905061447b6020830184613b43565b92915050565b60006020820190506144966000830184613eb0565b92915050565b6000604051905081810181811067ffffffffffffffff821117156144bf57600080fd5b8060405250919050565b600067ffffffffffffffff8211156144e057600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b60008160005260206000209050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060058210151561457057fe5b819050919050565b6000819050919050565b6000819050919050565b600061459782614542565b9050919050565b60006145a982614542565b9050919050565b60006145bb82614542565b9050919050565b60006145cd82614542565b9050919050565b6000819050919050565b6000819050919050565b60006145f382614542565b9050919050565b600061460582614542565b9050919050565b600061461782614562565b9050919050565b600061462982614578565b9050919050565b82818337600083830152505050565b60005b8381101561465d578082015181840152602081019050614642565b8381111561466c576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a72305820d6a17b1cb404a558ae8c41eba61bbda4bc30a7a9bd0c96433c4f0d0fe3bf37fe6c6578706572696d656e74616cf50037"};

    public static final String SM_BINARY = String.join("", SM_BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"constant\":false,\"inputs\":[{\"name\":\"berthId\",\"type\":\"string\"},{\"name\":\"inTime\",\"type\":\"int256\"},{\"name\":\"inTimeType\",\"type\":\"int256\"},{\"name\":\"inType\",\"type\":\"int256\"},{\"name\":\"plateId\",\"type\":\"string\"},{\"name\":\"prepayLen\",\"type\":\"int256\"},{\"name\":\"prepayMoney\",\"type\":\"int256\"},{\"name\":\"vehicleType\",\"type\":\"int256\"},{\"name\":\"inPicHash\",\"type\":\"string\"}],\"name\":\"insertRecord\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"mIndex\",\"type\":\"uint256\"}],\"name\":\"getByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLoc\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"offset\",\"type\":\"int256\"},{\"name\":\"size\",\"type\":\"int256\"},{\"name\":\"start\",\"type\":\"int256\"},{\"name\":\"end\",\"type\":\"int256\"}],\"name\":\"getRecord\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"berthId\",\"type\":\"string\"}],\"name\":\"getById\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"loc\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"InsertRecordEvent\",\"type\":\"event\"}]"};

    public static final String ABI = String.join("", ABI_ARRAY);

    public static final String FUNC_INSERTRECORD = "insertRecord";

    public static final String FUNC_GETBYINDEX = "getByIndex";

    public static final String FUNC_GETINDEX = "getIndex";

    public static final String FUNC_GETLOC = "getLoc";

    public static final String FUNC_GETOWNER = "getOwner";

    public static final String FUNC_GETRECORD = "getRecord";

    public static final String FUNC_GETBYID = "getById";

    public static final Event INSERTRECORDEVENT_EVENT = new Event("InsertRecordEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Address>() {}));
    ;

    protected TstInV4(String contractAddress, Client client, CryptoKeyPair credential) {
        super(getBinary(client.getCryptoSuite()), contractAddress, client, credential);
    }

    public static String getBinary(CryptoSuite cryptoSuite) {
        return (cryptoSuite.getCryptoTypeConfig() == CryptoType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public TransactionReceipt insertRecord(String berthId, BigInteger inTime, BigInteger inTimeType, BigInteger inType, String plateId, BigInteger prepayLen, BigInteger prepayMoney, BigInteger vehicleType, String inPicHash) {
        final Function function = new Function(
                FUNC_INSERTRECORD, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(berthId), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(inTime), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(inTimeType), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(inType), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(plateId), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(prepayLen), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(prepayMoney), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(vehicleType), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(inPicHash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void insertRecord(String berthId, BigInteger inTime, BigInteger inTimeType, BigInteger inType, String plateId, BigInteger prepayLen, BigInteger prepayMoney, BigInteger vehicleType, String inPicHash, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_INSERTRECORD, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(berthId), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(inTime), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(inTimeType), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(inType), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(plateId), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(prepayLen), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(prepayMoney), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(vehicleType), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(inPicHash)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForInsertRecord(String berthId, BigInteger inTime, BigInteger inTimeType, BigInteger inType, String plateId, BigInteger prepayLen, BigInteger prepayMoney, BigInteger vehicleType, String inPicHash) {
        final Function function = new Function(
                FUNC_INSERTRECORD, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(berthId), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(inTime), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(inTimeType), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(inType), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(plateId), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(prepayLen), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(prepayMoney), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(vehicleType), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(inPicHash)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple9<String, BigInteger, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String> getInsertRecordInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_INSERTRECORD, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple9<String, BigInteger, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String>(

                (String) results.get(0).getValue(), 
                (BigInteger) results.get(1).getValue(), 
                (BigInteger) results.get(2).getValue(), 
                (BigInteger) results.get(3).getValue(), 
                (String) results.get(4).getValue(), 
                (BigInteger) results.get(5).getValue(), 
                (BigInteger) results.get(6).getValue(), 
                (BigInteger) results.get(7).getValue(), 
                (String) results.get(8).getValue()
                );
    }

    public Tuple1<BigInteger> getInsertRecordOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_INSERTRECORD, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public TransactionReceipt getByIndex(BigInteger mIndex) {
        final Function function = new Function(
                FUNC_GETBYINDEX, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(mIndex)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void getByIndex(BigInteger mIndex, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_GETBYINDEX, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(mIndex)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForGetByIndex(BigInteger mIndex) {
        final Function function = new Function(
                FUNC_GETBYINDEX, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(mIndex)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<BigInteger> getGetByIndexInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_GETBYINDEX, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public Tuple9<String, BigInteger, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String> getGetByIndexOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_GETBYINDEX, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple9<String, BigInteger, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String>(

                (String) results.get(0).getValue(), 
                (BigInteger) results.get(1).getValue(), 
                (BigInteger) results.get(2).getValue(), 
                (BigInteger) results.get(3).getValue(), 
                (String) results.get(4).getValue(), 
                (BigInteger) results.get(5).getValue(), 
                (BigInteger) results.get(6).getValue(), 
                (BigInteger) results.get(7).getValue(), 
                (String) results.get(8).getValue()
                );
    }

    public BigInteger getIndex() throws ContractException {
        final Function function = new Function(FUNC_GETINDEX, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallWithSingleValueReturn(function, BigInteger.class);
    }

    public String getLoc() throws ContractException {
        final Function function = new Function(FUNC_GETLOC, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public String getOwner() throws ContractException {
        final Function function = new Function(FUNC_GETOWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public TransactionReceipt getRecord(BigInteger offset, BigInteger size, BigInteger start, BigInteger end) {
        final Function function = new Function(
                FUNC_GETRECORD, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(offset), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(size), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(start), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(end)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void getRecord(BigInteger offset, BigInteger size, BigInteger start, BigInteger end, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_GETRECORD, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(offset), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(size), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(start), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(end)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForGetRecord(BigInteger offset, BigInteger size, BigInteger start, BigInteger end) {
        final Function function = new Function(
                FUNC_GETRECORD, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(offset), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(size), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(start), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(end)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple4<BigInteger, BigInteger, BigInteger, BigInteger> getGetRecordInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_GETRECORD, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple4<BigInteger, BigInteger, BigInteger, BigInteger>(

                (BigInteger) results.get(0).getValue(), 
                (BigInteger) results.get(1).getValue(), 
                (BigInteger) results.get(2).getValue(), 
                (BigInteger) results.get(3).getValue()
                );
    }

    public Tuple4<BigInteger, BigInteger, BigInteger, List<String>> getGetRecordOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_GETRECORD, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<DynamicArray<Utf8String>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple4<BigInteger, BigInteger, BigInteger, List<String>>(

                (BigInteger) results.get(0).getValue(), 
                (BigInteger) results.get(1).getValue(), 
                (BigInteger) results.get(2).getValue(), 
                convertToNative((List<Utf8String>) results.get(3).getValue())
                );
    }

    public TransactionReceipt getById(String berthId) {
        final Function function = new Function(
                FUNC_GETBYID, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(berthId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void getById(String berthId, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_GETBYID, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(berthId)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForGetById(String berthId) {
        final Function function = new Function(
                FUNC_GETBYID, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(berthId)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getGetByIdInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_GETBYID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple9<String, BigInteger, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String> getGetByIdOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_GETBYID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple9<String, BigInteger, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String>(

                (String) results.get(0).getValue(), 
                (BigInteger) results.get(1).getValue(), 
                (BigInteger) results.get(2).getValue(), 
                (BigInteger) results.get(3).getValue(), 
                (String) results.get(4).getValue(), 
                (BigInteger) results.get(5).getValue(), 
                (BigInteger) results.get(6).getValue(), 
                (BigInteger) results.get(7).getValue(), 
                (String) results.get(8).getValue()
                );
    }

    public List<InsertRecordEventEventResponse> getInsertRecordEventEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(INSERTRECORDEVENT_EVENT, transactionReceipt);
        ArrayList<InsertRecordEventEventResponse> responses = new ArrayList<InsertRecordEventEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            InsertRecordEventEventResponse typedResponse = new InsertRecordEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.account = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeInsertRecordEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTRECORDEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeInsertRecordEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTRECORDEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public static TstInV4 load(String contractAddress, Client client, CryptoKeyPair credential) {
        return new TstInV4(contractAddress, client, credential);
    }

    public static TstInV4 deploy(Client client, CryptoKeyPair credential, String loc) throws ContractException {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(loc)));
        return deploy(TstInV4.class, client, credential, getBinary(client.getCryptoSuite()), encodedConstructor);
    }

    public static class InsertRecordEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret;

        public String account;
    }
}
