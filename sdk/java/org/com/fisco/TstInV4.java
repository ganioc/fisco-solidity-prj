package org.com.fisco;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.fisco.bcos.sdk.abi.FunctionEncoder;
import org.fisco.bcos.sdk.abi.FunctionReturnDecoder;
import org.fisco.bcos.sdk.abi.TypeReference;
import org.fisco.bcos.sdk.abi.datatypes.Address;
import org.fisco.bcos.sdk.abi.datatypes.DynamicArray;
import org.fisco.bcos.sdk.abi.datatypes.Event;
import org.fisco.bcos.sdk.abi.datatypes.Function;
import org.fisco.bcos.sdk.abi.datatypes.Type;
import org.fisco.bcos.sdk.abi.datatypes.Utf8String;
import org.fisco.bcos.sdk.abi.datatypes.generated.Int256;
import org.fisco.bcos.sdk.abi.datatypes.generated.Uint256;
import org.fisco.bcos.sdk.abi.datatypes.generated.Uint8;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple1;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple4;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple9;
import org.fisco.bcos.sdk.client.Client;
import org.fisco.bcos.sdk.contract.Contract;
import org.fisco.bcos.sdk.crypto.CryptoSuite;
import org.fisco.bcos.sdk.crypto.keypair.CryptoKeyPair;
import org.fisco.bcos.sdk.eventsub.EventCallback;
import org.fisco.bcos.sdk.model.CryptoType;
import org.fisco.bcos.sdk.model.TransactionReceipt;
import org.fisco.bcos.sdk.model.callback.TransactionCallback;
import org.fisco.bcos.sdk.transaction.model.exception.ContractException;

@SuppressWarnings("unchecked")
public class TstInV4 extends Contract {
    public static final String[] BINARY_ARRAY = {"","00000000000000000000000000000000000000028152600401610a6790613e60565b602060405180830381600087803b158015610a8157600080fd5b505af1158015610a95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ab991908101906134fb565b8673ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610b0c90613e12565b602060405180830381600087803b158015610b2657600080fd5b505af1158015610b3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b5e91908101906134fb565b8773ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610bb190613dc4565b602060405180830381600087803b158015610bcb57600080fd5b505af1158015610bdf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c0391908101906134fb565b8873ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610c5690613ffb565b600060405180830381600087803b158015610c7057600080fd5b505af1158015610c84573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250610cad91908101906135c8565b9a509a509a509a509a509a509a509a509a505b50509193959799909294969850565b60008054905090565b606060028054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d705780601f10610d4557610100808354040283529160200191610d70565b820191906000526020600020905b815481529060010190602001808311610d5357829003601f168201915b5050505050905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806000606060006060600080610e8f60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e4b5780601f10610e2057610100808354040283529160200191610e4b565b820191906000526020600020905b815481529060010190602001808311610e2e57829003601f168201915b50505050508d8d6040805190810160405280600781526020017f696e5f74696d65000000000000000000000000000000000000000000000000008152508e8e612d68565b935060098473ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610ef757600080fd5b505af1158015610f0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610f2f91908101906134fb565b02604051908082528060200260200182016040528015610f6357816020015b6060815260200190600190039081610f4e5790505b509250600091505b8373ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610fcf57600080fd5b505af1158015610fe3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061100791908101906134fb565b8210156117f6578373ffffffffffffffffffffffffffffffffffffffff1663846719e0836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016110639190613b9c565b602060405180830381600087803b15801561107d57600080fd5b505af1158015611091573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506110b591908101906134a9565b90508073ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161110a90614050565b600060405180830381600087803b15801561112457600080fd5b505af1158015611138573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061116191908101906135c8565b836009840281518110151561117257fe5b9060200190602002018190525061122c8173ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016111d5906140da565b602060405180830381600087803b1580156111ef57600080fd5b505af1158015611203573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061122791908101906134fb565b61306d565b836001600985020181518110151561124057fe5b906020019060200201819052506112fa8173ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016112a390613fad565b602060405180830381600087803b1580156112bd57600080fd5b505af11580156112d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112f591908101906134fb565b61306d565b836002600985020181518110151561130e57fe5b906020019060200201819052506113c88173ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161137190613f0a565b602060405180830381600087803b15801561138b57600080fd5b505af115801561139f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113c391908101906134fb565b61306d565b83600360098502018151811015156113dc57fe5b906020019060200201819052508073ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161143c90613f58565b600060405180830381600087803b15801561145657600080fd5b505af115801561146a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061149391908101906135c8565b83600460098502018151811015156114a757fe5b906020019060200201819052506115618173ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161150a90613e60565b602060405180830381600087803b15801561152457600080fd5b505af1158015611538573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061155c91908101906134fb565b61306d565b836005600985020181518110151561157557fe5b9060200190602002018190525061162f8173ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016115d890613e12565b602060405180830381600087803b1580156115f257600080fd5b505af1158015611606573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061162a91908101906134fb565b61306d565b836006600985020181518110151561164357fe5b906020019060200201819052506116fd8173ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016116a690613dc4565b602060405180830381600087803b1580156116c057600080fd5b505af11580156116d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506116f891908101906134fb565b61306d565b836007600985020181518110151561171157fe5b906020019060200201819052508073ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161177190613ffb565b600060405180830381600087803b15801561178b57600080fd5b505af115801561179f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506117c891908101906135c8565b83600860098502018151811015156117dc57fe5b906020019060200201819052508180600101925050610f6b565b8b8b8573ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561185c57600080fd5b505af1158015611870573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061189491908101906134fb565b85975097509750975050505050945094509450949050565b6060600080600060606000806000606060008061196360038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119585780601f1061192d57610100808354040283529160200191611958565b820191906000526020600020905b81548152906001019060200180831161193b57829003601f168201915b50505050508d61211f565b915060008273ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156119cb57600080fd5b505af11580156119df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611a0391908101906134fb565b1415611a7757600080600080600080602060405190810160405280600081525095949392919085955084945083935060206040519081016040528060008152509291","9082925081915080905060206040519081016040528060008152509a509a509a509a509a509a509a509a509a50612110565b8173ffffffffffffffffffffffffffffffffffffffff1663846719e060006040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611acd9190613c55565b602060405180830381600087803b158015611ae757600080fd5b505af1158015611afb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611b1f91908101906134a9565b90508073ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611b7490614050565b600060405180830381600087803b158015611b8e57600080fd5b505af1158015611ba2573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250611bcb91908101906135c8565b8173ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611c1e906140da565b602060405180830381600087803b158015611c3857600080fd5b505af1158015611c4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611c7091908101906134fb565b8273ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611cc390613fad565b602060405180830381600087803b158015611cdd57600080fd5b505af1158015611cf1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611d1591908101906134fb565b8373ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611d6890613f0a565b602060405180830381600087803b158015611d8257600080fd5b505af1158015611d96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611dba91908101906134fb565b8473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611e0d90613f58565b600060405180830381600087803b158015611e2757600080fd5b505af1158015611e3b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250611e6491908101906135c8565b8573ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611eb790613e60565b602060405180830381600087803b158015611ed157600080fd5b505af1158015611ee5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611f0991908101906134fb565b8673ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611f5c90613e12565b602060405180830381600087803b158015611f7657600080fd5b505af1158015611f8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611fae91908101906134fb565b8773ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161200190613dc4565b602060405180830381600087803b15801561201b57600080fd5b505af115801561202f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061205391908101906134fb565b8873ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016120a690613ffb565b600060405180830381600087803b1580156120c057600080fd5b505af11580156120d4573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506120fd91908101906135c8565b9a509a509a509a509a509a509a509a509a505b50509193959799909294969850565b600080600061212d8561324b565b91508173ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561219357600080fd5b505af11580156121a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506121cb9190810190613457565b90508073ffffffffffffffffffffffffffffffffffffffff1663cd30a1d1856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016122229190614070565b600060405180830381600087803b15801561223c57600080fd5b505af1158015612250573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e8434e3986836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016122ab929190613c92565b602060405180830381600087803b1580156122c557600080fd5b505af11580156122d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506122fd9190810190613480565b9250505092915050565b60008060006123af60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123a55780601f1061237a576101008083540402835291602001916123a5565b820191906000526020600020905b81548152906001019060200180831161238857829003601f168201915b505050505061324b565b91508173ffffffffffffffffffffffffffffffffffffffff166313db93466040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561241557600080fd5b505af1158015612429573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061244d91908101906134a9565b90508073ffffffffffffffffffffffffffffffffffffffff1663e942b51660036040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016124a591906140a5565b600060405180830381600087803b1580156124bf57600080fd5b505af11580156124d3573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663e942b5168d6040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161252c9190614070565b600060405180830381600087803b15801561254657600080fd5b505af115801561255a573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16638a42ebe96000546040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016125b59190613edc565b600060405180830381600087803b1580156125cf57600080fd5b505af11580156125e3573d6000803e3d6000fd5b505050506125ef613302565b8073ffffffffffffffffffffffffffffffffffffffff16632ef8ba748c6040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161264491906140fa565b600060405180830381600087803b15801561265e57600080fd5b505af1158015612672573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16632ef8ba748b6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016126cb9190613fcd565b600060405180830381600087803b1580156126e557600080fd5b505af11580156126f9573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16632ef8ba748a6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016127529190613f2a565b600060405180830381600087803b15801561276c57600080fd5b505af1158015612780573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663e942b516896040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016127d99190613f78565b600060405180830381600087803b1580156127f357600080fd5b505af1158015612807573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16632ef8ba74886040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016128609190613e80565b600060405180830381600087803b15801561287a57600080fd5b505af115801561288e573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16632ef8ba74876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016128e79190613e32565b600060405180830381600087803b15801561290157600080fd5b505af1158015612915573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16632ef8ba74866040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161296e9190613de4565b600060405180830381600087803b15801561298857600080fd5b505af115801561299c573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663e942b516856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016129f5919061401b565b600060405180830381600087803b158015612a0f57600080fd5b505af1158015612a23573d6000803e3d6000fd5b5050505060018273ffffffffffffffffffffffffffffffffffffffff166331afac36","","00600c82527f696e5f74696d655f7479706500000000000000000000000000000000000000006020830152604082019050919050565b6000600b82527f696e5f7069635f686173680000000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f62657274685f69640000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f7461626c655f69640000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600782527f696e5f74696d65000000000000000000000000000000000000000000000000006020830152604082019050919050565b613b6081614229565b82525050565b6000602082019050613b7b6000830184613740565b92915050565b6000602082019050613b9660008301846137db565b92915050565b6000602082019050613bb160008301846137ea565b92915050565b6000604082019050613bcc60008301856137ea565b613bd96020830184613740565b9392505050565b6000604082019050613bf560008301856137ea565b613c0260208301846137ea565b9392505050565b6000608082019050613c1e60008301876137ea565b613c2b60208301866137ea565b613c3860408301856137ea565b8181036060830152613c4a818461374f565b905095945050505050565b6000602082019050613c6a60008301846137f9565b92915050565b60006020820190508181036000830152613c8a8184613808565b905092915050565b60006040820190508181036000830152613cac8185613808565b9050613cbb60208301846137bd565b9392505050565b60006040820190508181036000830152613cdc8185613808565b9050613ceb60208301846137ea565b9392505050565b6000610120820190508181036000830152613d0d818c613808565b9050613d1c602083018b6137ea565b613d29604083018a6137ea565b613d3660608301896137ea565b8181036080830152613d488188613808565b9050613d5760a08301876137ea565b613d6460c08301866137ea565b613d7160e08301856137ea565b818103610100830152613d848184613808565b90509a9950505050505050505050565b60006040820190508181036000830152613dae8185613874565b9050613dbd60208301846137cc565b9392505050565b60006020820190508181036000830152613ddd816138fa565b9050919050565b60006040820190508181036000830152613dfd816138fa565b9050613e0c60208301846137ea565b92915050565b60006020820190508181036000830152613e2b81613931565b9050919050565b60006040820190508181036000830152613e4b81613931565b9050613e5a60208301846137ea565b92915050565b60006020820190508181036000830152613e7981613968565b9050919050565b60006040820190508181036000830152613e9981613968565b9050613ea860208301846137ea565b92915050565b60006040820190508181036000830152613ec78161399f565b9050613ed660208301846137ea565b92915050565b60006040820190508181036000830152613ef58161399f565b9050613f046020830184613b57565b92915050565b60006020820190508181036000830152613f23816139d6565b9050919050565b60006040820190508181036000830152613f43816139d6565b9050613f5260208301846137ea565b92915050565b60006020820190508181036000830152613f7181613a0d565b9050919050565b60006040820190508181036000830152613f9181613a0d565b90508181036020830152613fa58184613808565b905092915050565b60006020820190508181036000830152613fc681613a44565b9050919050565b60006040820190508181036000830152613fe681613a44565b9050613ff560208301846137ea565b92915050565b6000602082019050818103600083015261401481613a7b565b9050919050565b6000604082019050818103600083015261403481613a7b565b905081810360208301526140488184613808565b905092915050565b6000602082019050818103600083015261406981613ab2565b9050919050565b6000604082019050818103600083015261408981613ab2565b9050818103602083015261409d8184613808565b905092915050565b600060408201905081810360008301526140be81613ae9565b905081810360208301526140d28184613874565b905092915050565b600060208201905081810360008301526140f381613b20565b9050919050565b6000604082019050818103600083015261411381613b20565b905061412260208301846137ea565b92915050565b600060208201905061413d6000830184613b57565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561416657600080fd5b8060405250919050565b600067ffffffffffffffff82111561418757600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b60008160005260206000209050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060058210151561421757fe5b819050919050565b6000819050919050565b6000819050919050565b600061423e826141e9565b9050919050565b6000614250826141e9565b9050919050565b6000614262826141e9565b9050919050565b6000614274826141e9565b9050919050565b6000819050919050565b6000819050919050565b600061429a826141e9565b9050919050565b60006142ac826141e9565b9050919050565b60006142be82614209565b9050919050565b60006142d08261421f565b9050919050565b82818337600083830152505050565b60005b838110156143045780820151818401526020810190506142e9565b83811115614313576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a72305820536282f60554917f153397e7e722ab30f7f5d5ba7e8533304e763513f2fd141b6c6578706572696d656e74616cf50037"};

    public static final String BINARY = String.join("", BINARY_ARRAY);

    public static final String[] SM_BINARY_ARRAY = {"","ffffffffffffffffffffffff16639bca41e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610a8e90613dc4565b600060405180830381600087803b158015610aa857600080fd5b505af1158015610abc573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250610ae591908101906135c8565b9a509a509a509a509a509a509a509a509a505b50509193959799909294969850565b60606000806000606060008060006060600080610bbe60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bb35780601f10610b8857610100808354040283529160200191610bb3565b820191906000526020600020905b815481529060010190602001808311610b9657829003601f168201915b50505050508d612307565b915060008273ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610c2657600080fd5b505af1158015610c3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c5e91908101906134fb565b1415610cd2576000806000806000806020604051908101604052806000815250959493929190859550849450839350602060405190810160405280600081525092919082925081915080905060206040519081016040528060008152509a509a509a509a509a509a509a509a509a5061136b565b8173ffffffffffffffffffffffffffffffffffffffff16633dd2b61460006040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610d289190613c55565b602060405180830381600087803b158015610d4257600080fd5b505af1158015610d56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610d7a91908101906134a9565b90508073ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610dcf90613f11565b600060405180830381600087803b158015610de957600080fd5b505af1158015610dfd573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250610e2691908101906135c8565b8173ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610e7990613f66565b602060405180830381600087803b158015610e9357600080fd5b505af1158015610ea7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ecb91908101906134fb565b8273ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610f1e90614009565b602060405180830381600087803b158015610f3857600080fd5b505af1158015610f4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610f7091908101906134fb565b8373ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610fc390613e75565b602060405180830381600087803b158015610fdd57600080fd5b505af1158015610ff1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061101591908101906134fb565b8473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161106890613fb4565b600060405180830381600087803b15801561108257600080fd5b505af1158015611096573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506110bf91908101906135c8565b8573ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611112906140da565b602060405180830381600087803b15801561112c57600080fd5b505af1158015611140573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061116491908101906134fb565b8673ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016111b79061408c565b602060405180830381600087803b1580156111d157600080fd5b505af11580156111e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061120991908101906134fb565b8773ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161125c90613ec3565b602060405180830381600087803b15801561127657600080fd5b505af115801561128a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112ae91908101906134fb565b8873ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161130190613dc4565b600060405180830381600087803b15801561131b57600080fd5b505af115801561132f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061135891908101906135c8565b9a509a509a509a509a509a509a509a509a505b50509193959799909294969850565b60008061142160038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114165780601f106113eb57610100808354040283529160200191611416565b820191906000526020600020905b8154815290600101906020018083116113f957829003601f168201915b50505050508c612307565b90506000805414806114ce575060008173ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561149457600080fd5b505af11580156114a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506114cc91908101906134fb565b145b156114eb576114e48b8b8b8b8b8b8b8b8b6124ef565b9150611534565b7f9ce428db80850e033f4cc9e1ae53ad9e8b5c8ff6e7d2eb01616b851eb68bdd1b60048081111561151857fe5b33604051611527929190613bb7565b60405180910390a1600491505b509998505050505050505050565b60008054905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060028054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561160d5780601f106115e25761010080835404028352916020019161160d565b820191906000526020600020905b8154815290600101906020018083116115f057829003601f168201915b5050505050905090565b600080600060606000606060008061170260038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116be5780601f10611693576101008083540402835291602001916116be565b820191906000526020600020905b8154815290600101906020018083116116a157829003601f168201915b50505050508d8d6040805190810160405280600781526020017f696e5f74696d65000000000000000000000000000000000000000000000000008152508e8e612d68565b935060098473ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561176a57600080fd5b505af115801561177e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117a291908101906134fb565b026040519080825280602002602001820160405280156117d657816020015b60608152602001906001900390816117c15790505b509250600091505b8373ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561184257600080fd5b505af1158015611856573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061187a91908101906134fb565b821015612069578373ffffffffffffffffffffffffffffffffffffffff16633dd2b614836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016118d69190613b9c565b602060405180830381600087803b1580156118f057600080fd5b505af1158015611904573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061192891908101906134a9565b90508073ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161197d90613f11565b600060405180830381600087803b15801561199757600080fd5b505af11580156119ab573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506119d491908101906135c8565b83600984028151811015156119e557fe5b90602001906020020181905250611a9f8173ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611a4890613f","66565b602060405180830381600087803b158015611a6257600080fd5b505af1158015611a76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611a9a91908101906134fb565b61306d565b8360016009850201815181101515611ab357fe5b90602001906020020181905250611b6d8173ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611b1690614009565b602060405180830381600087803b158015611b3057600080fd5b505af1158015611b44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611b6891908101906134fb565b61306d565b8360026009850201815181101515611b8157fe5b90602001906020020181905250611c3b8173ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611be490613e75565b602060405180830381600087803b158015611bfe57600080fd5b505af1158015611c12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611c3691908101906134fb565b61306d565b8360036009850201815181101515611c4f57fe5b906020019060200201819052508073ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611caf90613fb4565b600060405180830381600087803b158015611cc957600080fd5b505af1158015611cdd573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250611d0691908101906135c8565b8360046009850201815181101515611d1a57fe5b90602001906020020181905250611dd48173ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611d7d906140da565b602060405180830381600087803b158015611d9757600080fd5b505af1158015611dab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611dcf91908101906134fb565b61306d565b8360056009850201815181101515611de857fe5b90602001906020020181905250611ea28173ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611e4b9061408c565b602060405180830381600087803b158015611e6557600080fd5b505af1158015611e79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611e9d91908101906134fb565b61306d565b8360066009850201815181101515611eb657fe5b90602001906020020181905250611f708173ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611f1990613ec3565b602060405180830381600087803b158015611f3357600080fd5b505af1158015611f47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611f6b91908101906134fb565b61306d565b8360076009850201815181101515611f8457fe5b906020019060200201819052508073ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611fe490613dc4565b600060405180830381600087803b158015611ffe57600080fd5b505af1158015612012573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061203b91908101906135c8565b836008600985020181518110151561204f57fe5b9060200190602002018190525081806001019250506117de565b8b8b8573ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156120cf57600080fd5b505af11580156120e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061210791908101906134fb565b85975097509750975050505050945094509450949050565b600080600061212d8561324b565b91508173ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561219357600080fd5b505af11580156121a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506121cb9190810190613457565b90508073ffffffffffffffffffffffffffffffffffffffff1663d62b54b4856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016122229190613e19565b600060405180830381600087803b15801561223c57600080fd5b505af1158015612250573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663d8ac595786836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016122ab929190613c92565b602060405180830381600087803b1580156122c557600080fd5b505af11580156122d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506122fd9190810190613480565b9250505092915050565b60008060006123158561324b565b91508173ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561237b57600080fd5b505af115801561238f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506123b39190810190613457565b90508073ffffffffffffffffffffffffffffffffffffffff1663ae763db5856040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161240a9190613f31565b600060405180830381600087803b15801561242457600080fd5b505af1158015612438573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663d8ac595786836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612493929190613c92565b602060405180830381600087803b1580156124ad57600080fd5b505af11580156124c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506124e59190810190613480565b9250505092915050565b600080600061259760038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561258d5780601f106125625761010080835404028352916020019161258d565b820191906000526020600020905b81548152906001019060200180831161257057829003601f168201915b505050505061324b565b91508173ffffffffffffffffffffffffffffffffffffffff16635887ab246040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156125fd57600080fd5b505af1158015612611573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061263591908101906134a9565b90508073ffffffffffffffffffffffffffffffffffffffff16631a391cb460036040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161268d9190614057565b600060405180830381600087803b1580156126a757600080fd5b505af11580156126bb573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16631a391cb48d6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016127149190613f31565b600060405180830381600087803b15801561272e57600080fd5b505af1158015612742573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663f2f4ee6d6000546040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161279d9190613e47565b600060405180830381600087803b1580156127b757600080fd5b505af11580156127cb573d6000803e3d6000fd5b505050506127d7613302565b8073ffffffffffffffffffffffffffffffffffffffff1663def426988c6040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161282c9190613f86565b600060405180830381600087803b15801561284657600080fd5b505af115801561285a573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663def426988b6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016128b39190614029565b600060405180830381600087803b1580156128cd57600080fd5b505af11580156128e1573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663def426988a6040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161293a9190613e95565b600060405180830381600087803b15801561295457600080fd5b505af1158015612968573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16631a391cb4896040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016129c19190613fd4565b600060405180830381600087803b1580156129db57600080fd5b505af11580156129ef573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663def42698886040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612a4891906140","","00600882527f706c6174655f69640000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f696e5f74696d655f7479706500000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f7461626c655f69640000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f7072657061795f6d6f6e657900000000000000000000000000000000000000006020830152604082019050919050565b6000600a82527f7072657061795f6c656e000000000000000000000000000000000000000000006020830152604082019050919050565b613b6081614229565b82525050565b6000602082019050613b7b6000830184613740565b92915050565b6000602082019050613b9660008301846137db565b92915050565b6000602082019050613bb160008301846137ea565b92915050565b6000604082019050613bcc60008301856137ea565b613bd96020830184613740565b9392505050565b6000604082019050613bf560008301856137ea565b613c0260208301846137ea565b9392505050565b6000608082019050613c1e60008301876137ea565b613c2b60208301866137ea565b613c3860408301856137ea565b8181036060830152613c4a818461374f565b905095945050505050565b6000602082019050613c6a60008301846137f9565b92915050565b60006020820190508181036000830152613c8a8184613808565b905092915050565b60006040820190508181036000830152613cac8185613808565b9050613cbb60208301846137bd565b9392505050565b60006040820190508181036000830152613cdc8185613808565b9050613ceb60208301846137ea565b9392505050565b6000610120820190508181036000830152613d0d818c613808565b9050613d1c602083018b6137ea565b613d29604083018a6137ea565b613d3660608301896137ea565b8181036080830152613d488188613808565b9050613d5760a08301876137ea565b613d6460c08301866137ea565b613d7160e08301856137ea565b818103610100830152613d848184613808565b90509a9950505050505050505050565b60006040820190508181036000830152613dae8185613874565b9050613dbd60208301846137cc565b9392505050565b60006020820190508181036000830152613ddd816138fa565b9050919050565b60006040820190508181036000830152613dfd816138fa565b90508181036020830152613e118184613808565b905092915050565b60006040820190508181036000830152613e3281613931565b9050613e4160208301846137ea565b92915050565b60006040820190508181036000830152613e6081613931565b9050613e6f6020830184613b57565b92915050565b60006020820190508181036000830152613e8e81613968565b9050919050565b60006040820190508181036000830152613eae81613968565b9050613ebd60208301846137ea565b92915050565b60006020820190508181036000830152613edc8161399f565b9050919050565b60006040820190508181036000830152613efc8161399f565b9050613f0b60208301846137ea565b92915050565b60006020820190508181036000830152613f2a816139d6565b9050919050565b60006040820190508181036000830152613f4a816139d6565b90508181036020830152613f5e8184613808565b905092915050565b60006020820190508181036000830152613f7f81613a0d565b9050919050565b60006040820190508181036000830152613f9f81613a0d565b9050613fae60208301846137ea565b92915050565b60006020820190508181036000830152613fcd81613a44565b9050919050565b60006040820190508181036000830152613fed81613a44565b905081810360208301526140018184613808565b905092915050565b6000602082019050818103600083015261402281613a7b565b9050919050565b6000604082019050818103600083015261404281613a7b565b905061405160208301846137ea565b92915050565b6000604082019050818103600083015261407081613ab2565b905081810360208301526140848184613874565b905092915050565b600060208201905081810360008301526140a581613ae9565b9050919050565b600060408201905081810360008301526140c581613ae9565b90506140d460208301846137ea565b92915050565b600060208201905081810360008301526140f381613b20565b9050919050565b6000604082019050818103600083015261411381613b20565b905061412260208301846137ea565b92915050565b600060208201905061413d6000830184613b57565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561416657600080fd5b8060405250919050565b600067ffffffffffffffff82111561418757600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b60008160005260206000209050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060058210151561421757fe5b819050919050565b6000819050919050565b6000819050919050565b600061423e826141e9565b9050919050565b6000614250826141e9565b9050919050565b6000614262826141e9565b9050919050565b6000614274826141e9565b9050919050565b6000819050919050565b6000819050919050565b600061429a826141e9565b9050919050565b60006142ac826141e9565b9050919050565b60006142be82614209565b9050919050565b60006142d08261421f565b9050919050565b82818337600083830152505050565b60005b838110156143045780820151818401526020810190506142e9565b83811115614313576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a723058209b714c668df795670b2a261fd35aad6ee11aa12dbc7640f502d41392ed543e586c6578706572696d656e74616cf50037"};

    public static final String SM_BINARY = String.join("", SM_BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"constant\":false,\"inputs\":[{\"name\":\"berthId\",\"type\":\"string\"},{\"name\":\"inTime\",\"type\":\"int256\"},{\"name\":\"inTimeType\",\"type\":\"int256\"},{\"name\":\"inType\",\"type\":\"int256\"},{\"name\":\"plateId\",\"type\":\"string\"},{\"name\":\"prepayLen\",\"type\":\"int256\"},{\"name\":\"prepayMoney\",\"type\":\"int256\"},{\"name\":\"vehicleType\",\"type\":\"int256\"},{\"name\":\"inPicHash\",\"type\":\"string\"}],\"name\":\"insertRecord\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"mIndex\",\"type\":\"uint256\"}],\"name\":\"getByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLoc\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"offset\",\"type\":\"int256\"},{\"name\":\"size\",\"type\":\"int256\"},{\"name\":\"start\",\"type\":\"int256\"},{\"name\":\"end\",\"type\":\"int256\"}],\"name\":\"getRecord\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"berthId\",\"type\":\"string\"}],\"name\":\"getById\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"loc\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"InsertRecordEvent\",\"type\":\"event\"}]"};

    public static final String ABI = String.join("", ABI_ARRAY);

    public static final String FUNC_INSERTRECORD = "insertRecord";

    public static final String FUNC_GETBYINDEX = "getByIndex";

    public static final String FUNC_GETINDEX = "getIndex";

    public static final String FUNC_GETLOC = "getLoc";

    public static final String FUNC_GETOWNER = "getOwner";

    public static final String FUNC_GETRECORD = "getRecord";

    public static final String FUNC_GETBYID = "getById";

    public static final Event INSERTRECORDEVENT_EVENT = new Event("InsertRecordEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Address>() {}));
    ;

    protected TstInV4(String contractAddress, Client client, CryptoKeyPair credential) {
        super(getBinary(client.getCryptoSuite()), contractAddress, client, credential);
    }

    public static String getBinary(CryptoSuite cryptoSuite) {
        return (cryptoSuite.getCryptoTypeConfig() == CryptoType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public TransactionReceipt insertRecord(String berthId, BigInteger inTime, BigInteger inTimeType, BigInteger inType, String plateId, BigInteger prepayLen, BigInteger prepayMoney, BigInteger vehicleType, String inPicHash) {
        final Function function = new Function(
                FUNC_INSERTRECORD, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(berthId), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(inTime), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(inTimeType), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(inType), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(plateId), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(prepayLen), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(prepayMoney), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(vehicleType), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(inPicHash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void insertRecord(String berthId, BigInteger inTime, BigInteger inTimeType, BigInteger inType, String plateId, BigInteger prepayLen, BigInteger prepayMoney, BigInteger vehicleType, String inPicHash, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_INSERTRECORD, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(berthId), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(inTime), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(inTimeType), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(inType), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(plateId), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(prepayLen), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(prepayMoney), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(vehicleType), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(inPicHash)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForInsertRecord(String berthId, BigInteger inTime, BigInteger inTimeType, BigInteger inType, String plateId, BigInteger prepayLen, BigInteger prepayMoney, BigInteger vehicleType, String inPicHash) {
        final Function function = new Function(
                FUNC_INSERTRECORD, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(berthId), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(inTime), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(inTimeType), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(inType), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(plateId), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(prepayLen), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(prepayMoney), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(vehicleType), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(inPicHash)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple9<String, BigInteger, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String> getInsertRecordInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_INSERTRECORD, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple9<String, BigInteger, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String>(

                (String) results.get(0).getValue(), 
                (BigInteger) results.get(1).getValue(), 
                (BigInteger) results.get(2).getValue(), 
                (BigInteger) results.get(3).getValue(), 
                (String) results.get(4).getValue(), 
                (BigInteger) results.get(5).getValue(), 
                (BigInteger) results.get(6).getValue(), 
                (BigInteger) results.get(7).getValue(), 
                (String) results.get(8).getValue()
                );
    }

    public Tuple1<BigInteger> getInsertRecordOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_INSERTRECORD, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public TransactionReceipt getByIndex(BigInteger mIndex) {
        final Function function = new Function(
                FUNC_GETBYINDEX, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(mIndex)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void getByIndex(BigInteger mIndex, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_GETBYINDEX, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(mIndex)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForGetByIndex(BigInteger mIndex) {
        final Function function = new Function(
                FUNC_GETBYINDEX, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(mIndex)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<BigInteger> getGetByIndexInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_GETBYINDEX, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public Tuple9<String, BigInteger, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String> getGetByIndexOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_GETBYINDEX, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple9<String, BigInteger, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String>(

                (String) results.get(0).getValue(), 
                (BigInteger) results.get(1).getValue(), 
                (BigInteger) results.get(2).getValue(), 
                (BigInteger) results.get(3).getValue(), 
                (String) results.get(4).getValue(), 
                (BigInteger) results.get(5).getValue(), 
                (BigInteger) results.get(6).getValue(), 
                (BigInteger) results.get(7).getValue(), 
                (String) results.get(8).getValue()
                );
    }

    public BigInteger getIndex() throws ContractException {
        final Function function = new Function(FUNC_GETINDEX, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallWithSingleValueReturn(function, BigInteger.class);
    }

    public String getLoc() throws ContractException {
        final Function function = new Function(FUNC_GETLOC, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public String getOwner() throws ContractException {
        final Function function = new Function(FUNC_GETOWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public TransactionReceipt getRecord(BigInteger offset, BigInteger size, BigInteger start, BigInteger end) {
        final Function function = new Function(
                FUNC_GETRECORD, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(offset), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(size), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(start), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(end)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void getRecord(BigInteger offset, BigInteger size, BigInteger start, BigInteger end, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_GETRECORD, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(offset), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(size), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(start), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(end)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForGetRecord(BigInteger offset, BigInteger size, BigInteger start, BigInteger end) {
        final Function function = new Function(
                FUNC_GETRECORD, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(offset), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(size), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(start), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(end)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple4<BigInteger, BigInteger, BigInteger, BigInteger> getGetRecordInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_GETRECORD, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple4<BigInteger, BigInteger, BigInteger, BigInteger>(

                (BigInteger) results.get(0).getValue(), 
                (BigInteger) results.get(1).getValue(), 
                (BigInteger) results.get(2).getValue(), 
                (BigInteger) results.get(3).getValue()
                );
    }

    public Tuple4<BigInteger, BigInteger, BigInteger, List<String>> getGetRecordOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_GETRECORD, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<DynamicArray<Utf8String>>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple4<BigInteger, BigInteger, BigInteger, List<String>>(

                (BigInteger) results.get(0).getValue(), 
                (BigInteger) results.get(1).getValue(), 
                (BigInteger) results.get(2).getValue(), 
                convertToNative((List<Utf8String>) results.get(3).getValue())
                );
    }

    public TransactionReceipt getById(String berthId) {
        final Function function = new Function(
                FUNC_GETBYID, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(berthId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void getById(String berthId, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_GETBYID, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(berthId)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForGetById(String berthId) {
        final Function function = new Function(
                FUNC_GETBYID, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(berthId)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getGetByIdInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_GETBYID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple9<String, BigInteger, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String> getGetByIdOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_GETBYID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple9<String, BigInteger, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String>(

                (String) results.get(0).getValue(), 
                (BigInteger) results.get(1).getValue(), 
                (BigInteger) results.get(2).getValue(), 
                (BigInteger) results.get(3).getValue(), 
                (String) results.get(4).getValue(), 
                (BigInteger) results.get(5).getValue(), 
                (BigInteger) results.get(6).getValue(), 
                (BigInteger) results.get(7).getValue(), 
                (String) results.get(8).getValue()
                );
    }

    public List<InsertRecordEventEventResponse> getInsertRecordEventEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(INSERTRECORDEVENT_EVENT, transactionReceipt);
        ArrayList<InsertRecordEventEventResponse> responses = new ArrayList<InsertRecordEventEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            InsertRecordEventEventResponse typedResponse = new InsertRecordEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.account = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeInsertRecordEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTRECORDEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeInsertRecordEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTRECORDEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public static TstInV4 load(String contractAddress, Client client, CryptoKeyPair credential) {
        return new TstInV4(contractAddress, client, credential);
    }

    public static TstInV4 deploy(Client client, CryptoKeyPair credential, String loc) throws ContractException {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(loc)));
        return deploy(TstInV4.class, client, credential, getBinary(client.getCryptoSuite()), encodedConstructor);
    }

    public static class InsertRecordEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret;

        public String account;
    }
}
