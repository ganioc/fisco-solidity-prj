package org.com.fisco;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.fisco.bcos.sdk.abi.FunctionEncoder;
import org.fisco.bcos.sdk.abi.FunctionReturnDecoder;
import org.fisco.bcos.sdk.abi.TypeReference;
import org.fisco.bcos.sdk.abi.datatypes.Address;
import org.fisco.bcos.sdk.abi.datatypes.Event;
import org.fisco.bcos.sdk.abi.datatypes.Function;
import org.fisco.bcos.sdk.abi.datatypes.Type;
import org.fisco.bcos.sdk.abi.datatypes.Utf8String;
import org.fisco.bcos.sdk.abi.datatypes.generated.Int256;
import org.fisco.bcos.sdk.abi.datatypes.generated.Uint256;
import org.fisco.bcos.sdk.abi.datatypes.generated.Uint8;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple1;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple5;
import org.fisco.bcos.sdk.client.Client;
import org.fisco.bcos.sdk.contract.Contract;
import org.fisco.bcos.sdk.crypto.CryptoSuite;
import org.fisco.bcos.sdk.crypto.keypair.CryptoKeyPair;
import org.fisco.bcos.sdk.eventsub.EventCallback;
import org.fisco.bcos.sdk.model.CryptoType;
import org.fisco.bcos.sdk.model.TransactionReceipt;
import org.fisco.bcos.sdk.model.callback.TransactionCallback;
import org.fisco.bcos.sdk.transaction.model.exception.ContractException;

@SuppressWarnings("unchecked")
public class TstOutV6 extends Contract {
    public static final String[] BINARY_ARRAY = {"","","0190602001808311611c4557829003601f168201915b5050505050612939565b91508173ffffffffffffffffffffffffffffffffffffffff166313db93466040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611cd257600080fd5b505af1158015611ce6573d6000803e3d6000fd5b505050506040513d6020811015611cfc57600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff1663e942b51660036040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808060200180602001838103835260088152602001807f7461626c655f6964000000000000000000000000000000000000000000000000815250602001838103825284818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015611e195780601f10611dee57610100808354040283529160200191611e19565b820191906000526020600020905b815481529060010190602001808311611dfc57829003601f168201915b50509350505050600060405180830381600087803b158015611e3a57600080fd5b505af1158015611e4e573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663e942b516896040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808060200180602001838103835260088152602001807f62657274685f6964000000000000000000000000000000000000000000000000815250602001838103825284818151815260200191508051906020019080838360005b83811015611f12578082015181840152602081019050611ef7565b50505050905090810190601f168015611f3f5780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b158015611f5f57600080fd5b505af1158015611f73573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16638a42ebe96000546040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825260058152602001807f696e64657800000000000000000000000000000000000000000000000000000081525060200192505050600060405180830381600087803b15801561202157600080fd5b505af1158015612035573d6000803e3d6000fd5b50505050612041612a58565b8073ffffffffffffffffffffffffffffffffffffffff16632ef8ba74886040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825260088152602001807f6f75745f74696d6500000000000000000000000000000000000000000000000081525060200192505050600060405180830381600087803b1580156120e957600080fd5b505af11580156120fd573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16632ef8ba74876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825260108152602001807f73686f756c645f7061795f6d6f6e65790000000000000000000000000000000081525060200192505050600060405180830381600087803b1580156121a957600080fd5b505af11580156121bd573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663e942b516866040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808060200180602001838103835260028152602001807f6964000000000000000000000000000000000000000000000000000000000000815250602001838103825284818151815260200191508051906020019080838360005b83811015612281578082015181840152602081019050612266565b50505050905090810190601f1680156122ae5780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b1580156122ce57600080fd5b505af11580156122e2573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663e942b516856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001806020018381038352600c8152602001807f6f75745f7069635f686173680000000000000000000000000000000000000000815250602001838103825284818151815260200191508051906020019080838360005b838110156123a657808201518184015260208101905061238b565b50505050905090810190601f1680156123d35780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b1580156123f357600080fd5b505af1158015612407573d6000803e3d6000fd5b5050505060018273ffffffffffffffffffffffffffffffffffffffff166331afac366003846040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281038252848181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156125125780601f106124e757610100808354040283529160200191612512565b820191906000526020600020905b8154815290600101906020018083116124f557829003601f168201915b50509350505050602060405180830381600087803b15801561253357600080fd5b505af1158015612547573d6000803e3d6000fd5b505050506040513d602081101561255d57600080fd5b810190808051906020019092919050505014156125f4577f3a66b6d5d90e100fca6d190a0e685c087e9c8e3981966428c8cf5b9512ebd9b8600060048111156125a257fe5b33604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a160009250612670565b7f3a66b6d5d90e100fca6d190a0e685c087e9c8e3981966428c8cf5b9512ebd9b86001600481111561262257fe5b33604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1600192505b505095945050505050565b600080600061268985612939565b91508173ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156126ef57600080fd5b505af1158015612703573d6000803e3d6000fd5b505050506040513d602081101561271957600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff1663e44594b9856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825260058152602001807f696e64657800000000000000000000000000000000000000000000000000000081525060200192505050600060405180830381600087803b1580156127d457600080fd5b505af11580156127e8573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e8434e3986836040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b838110156128a757808201518184015260208101905061288c565b50505050905090810190601f1680156128d45780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b1580156128f457600080fd5b505af1158015612908573d6000803e3d6000fd5b505050506040513d602081101561291e57600080fd5b81019080805190602001909291905050509250505092915050565b6000612943612a6b565b73ffffffffffffffffffffffffffffffffffffffff1663f23f63c9836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156129ca5780820151818401526020810190506129af565b50505050905090810190601f1680156129f75780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015612a1657600080fd5b505af1158015612a2a573d6000803e3d6000fd5b505050506040513d6020811015612a4057600080fd5b81019080805190602001909291905050509050919050565b6000808154809291906001019190505550565b60006110019050905600a165627a7a723058206067b6046e3ae78cbedc73dd176ac86400f6f43e14777b5e9771c57531782ad10029"};

    public static final String BINARY = String.join("", BINARY_ARRAY);

    public static final String[] SM_BINARY_ARRAY = {"","f1158015610c5e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015610c8857600080fd5b810190808051640100000000811115610ca057600080fd5b82810190506020810184811115610cb657600080fd5b8151856001820283011164010000000082111715610cd357600080fd5b50509291905050508473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018281038252600c8152602001807f6f75745f7069635f686173680000000000000000000000000000000000000000815250602001915050600060405180830381600087803b158015610d7b57600080fd5b505af1158015610d8f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015610db957600080fd5b810190808051640100000000811115610dd157600080fd5b82810190506020810184811115610de757600080fd5b8151856001820283011164010000000082111715610e0457600080fd5b5050929190505050965096509650965096505b505091939590929450565b6060600080606080600080610ed160038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ec65780601f10610e9b57610100808354040283529160200191610ec6565b820191906000526020600020905b815481529060010190602001808311610ea957829003601f168201915b505050505089611b5f565b915060008273ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610f3957600080fd5b505af1158015610f4d573d6000803e3d6000fd5b505050506040513d6020811015610f6357600080fd5b81019080805190602001909291905050501415610fc7576000806020604051908101604052806000815250919081915080905060206040519081016040528060008152506020604051908101604052806000815250965096509650965096506115c8565b8173ffffffffffffffffffffffffffffffffffffffff16633dd2b61460006040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b15801561103757600080fd5b505af115801561104b573d6000803e3d6000fd5b505050506040513d602081101561106157600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825260088152602001807f62657274685f6964000000000000000000000000000000000000000000000000815250602001915050600060405180830381600087803b15801561111457600080fd5b505af1158015611128573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561115257600080fd5b81019080805164010000000081111561116a57600080fd5b8281019050602081018481111561118057600080fd5b815185600182028301116401000000008211171561119d57600080fd5b50509291905050508173ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825260088152602001807f6f75745f74696d65000000000000000000000000000000000000000000000000815250602001915050602060405180830381600087803b15801561124557600080fd5b505af1158015611259573d6000803e3d6000fd5b505050506040513d602081101561126f57600080fd5b81019080805190602001909291905050508273ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825260108152602001807f73686f756c645f7061795f6d6f6e657900000000000000000000000000000000815250602001915050602060405180830381600087803b15801561132057600080fd5b505af1158015611334573d6000803e3d6000fd5b505050506040513d602081101561134a57600080fd5b81019080805190602001909291905050508373ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825260028152602001807f6964000000000000000000000000000000000000000000000000000000000000815250602001915050600060405180830381600087803b1580156113fb57600080fd5b505af115801561140f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561143957600080fd5b81019080805164010000000081111561145157600080fd5b8281019050602081018481111561146757600080fd5b815185600182028301116401000000008211171561148457600080fd5b50509291905050508473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018281038252600c8152602001807f6f75745f7069635f686173680000000000000000000000000000000000000000815250602001915050600060405180830381600087803b15801561152c57600080fd5b505af1158015611540573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561156a57600080fd5b81019080805164010000000081111561158257600080fd5b8281019050602081018481111561159857600080fd5b81518560018202830111640100000000821117156115b557600080fd5b5050929190505050965096509650965096505b505091939590929450565b6000806000861315156115e557600080fd5b61168960038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561167e5780601f106116535761010080835404028352916020019161167e565b820191906000526020600020905b81548152906001019060200180831161166157829003601f168201915b505050505088611b5f565b905060008173ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156116f157600080fd5b505af1158015611705573d6000803e3d6000fd5b505050506040513d602081101561171b57600080fd5b81019080805190602001909291905050501415156117b2577f9ce428db80850e033f4cc9e1ae53ad9e8b5c8ff6e7d2eb01616b851eb68bdd1b60048081111561176057fe5b33604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1600491506117c2565b6117bf8787878787611e82565b91505b5095945050505050565b60008054905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118975780601f1061186c57610100808354040283529160200191611897565b820191906000526020600020905b81548152906001019060200180831161187a57829003601f168201915b5050505050905090565b60008060006118af85612939565b91508173ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561191557600080fd5b505af1158015611929573d6000803e3d6000fd5b505050506040513d602081101561193f57600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff1663d62b54b4856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825260058152602001807f696e64657800000000000000000000000000000000000000000000000000000081525060200192505050600060405180830381600087803b1580156119fa57600080fd5b505af1158015611a0e573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663d8ac595786836040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b83811015611acd578082015181840152602081019050611ab2565b50505050905090810190601f168015611afa5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015611b1a57600080fd5b505af1158015611b2e573d6000803e3d6000fd5b505050506040513d6020811015611b4457600080fd5b81019080805190602001909291905050509250505092915050565b6000806000611b6d85612939565b91508173ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611bd357600080fd5b505af1158015611be7573d6000803e3d6000fd5b505050506040513d6020811015611bfd57600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff1663ae763db5856040518263ffffffff167c0100000000000000000000000000000000000000","000000000000000000028152600401808060200180602001838103835260088152602001807f62657274685f6964000000000000000000000000000000000000000000000000815250602001838103825284818151815260200191508051906020019080838360005b83811015611cd0578082015181840152602081019050611cb5565b50505050905090810190601f168015611cfd5780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b158015611d1d57600080fd5b505af1158015611d31573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663d8ac595786836040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b83811015611df0578082015181840152602081019050611dd5565b50505050905090810190601f168015611e1d5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015611e3d57600080fd5b505af1158015611e51573d6000803e3d6000fd5b505050506040513d6020811015611e6757600080fd5b81019080805190602001909291905050509250505092915050565b6000806000611f2a60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f205780601f10611ef557610100808354040283529160200191611f20565b820191906000526020600020905b815481529060010190602001808311611f0357829003601f168201915b5050505050612939565b91508173ffffffffffffffffffffffffffffffffffffffff16635887ab246040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611f9057600080fd5b505af1158015611fa4573d6000803e3d6000fd5b505050506040513d6020811015611fba57600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff16631a391cb460036040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808060200180602001838103835260088152602001807f7461626c655f69640000000000000000000000000000000000000000000000008152506020018381038252848181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156120d75780601f106120ac576101008083540402835291602001916120d7565b820191906000526020600020905b8154815290600101906020018083116120ba57829003601f168201915b50509350505050600060405180830381600087803b1580156120f857600080fd5b505af115801561210c573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16631a391cb4896040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808060200180602001838103835260088152602001807f62657274685f6964000000000000000000000000000000000000000000000000815250602001838103825284818151815260200191508051906020019080838360005b838110156121d05780820151818401526020810190506121b5565b50505050905090810190601f1680156121fd5780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b15801561221d57600080fd5b505af1158015612231573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663f2f4ee6d6000546040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825260058152602001807f696e64657800000000000000000000000000000000000000000000000000000081525060200192505050600060405180830381600087803b1580156122df57600080fd5b505af11580156122f3573d6000803e3d6000fd5b505050506122ff612a58565b8073ffffffffffffffffffffffffffffffffffffffff1663def42698886040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825260088152602001807f6f75745f74696d6500000000000000000000000000000000000000000000000081525060200192505050600060405180830381600087803b1580156123a757600080fd5b505af11580156123bb573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663def42698876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825260108152602001807f73686f756c645f7061795f6d6f6e65790000000000000000000000000000000081525060200192505050600060405180830381600087803b15801561246757600080fd5b505af115801561247b573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16631a391cb4866040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808060200180602001838103835260028152602001807f6964000000000000000000000000000000000000000000000000000000000000815250602001838103825284818151815260200191508051906020019080838360005b8381101561253f578082015181840152602081019050612524565b50505050905090810190601f16801561256c5780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b15801561258c57600080fd5b505af11580156125a0573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16631a391cb4856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001806020018381038352600c8152602001807f6f75745f7069635f686173680000000000000000000000000000000000000000815250602001838103825284818151815260200191508051906020019080838360005b83811015612664578082015181840152602081019050612649565b50505050905090810190601f1680156126915780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b1580156126b157600080fd5b505af11580156126c5573d6000803e3d6000fd5b5050505060018273ffffffffffffffffffffffffffffffffffffffff16634c6f30c06003846040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281038252848181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156127d05780601f106127a5576101008083540402835291602001916127d0565b820191906000526020600020905b8154815290600101906020018083116127b357829003601f168201915b50509350505050602060405180830381600087803b1580156127f157600080fd5b505af1158015612805573d6000803e3d6000fd5b505050506040513d602081101561281b57600080fd5b810190808051906020019092919050505014156128b2577f9ce428db80850e033f4cc9e1ae53ad9e8b5c8ff6e7d2eb01616b851eb68bdd1b6000600481111561286057fe5b33604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a16000925061292e565b7f9ce428db80850e033f4cc9e1ae53ad9e8b5c8ff6e7d2eb01616b851eb68bdd1b600160048111156128e057fe5b33604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1600192505b505095945050505050565b6000612943612a6b565b73ffffffffffffffffffffffffffffffffffffffff166359a48b65836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156129ca5780820151818401526020810190506129af565b50505050905090810190601f1680156129f75780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015612a1657600080fd5b505af1158015612a2a573d6000803e3d6000fd5b505050506040513d6020811015612a4057600080fd5b81019080805190602001909291905050509050919050565b6000808154809291906001019190505550565b60006110019050905600a165627a7a723058203cd1b814ab04c78dfc1d01a8f76c44b91601d0c138016a64a8e38e12d3a3993a0029"};

    public static final String SM_BINARY = String.join("", SM_BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"constant\":false,\"inputs\":[{\"name\":\"berthId\",\"type\":\"string\"},{\"name\":\"outTime\",\"type\":\"int256\"},{\"name\":\"shouldPayMoney\",\"type\":\"int256\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"outPicHash\",\"type\":\"string\"}],\"name\":\"insertRecord\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"mIndex\",\"type\":\"uint256\"}],\"name\":\"getByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLoc\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"berthId\",\"type\":\"string\"}],\"name\":\"getById\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"loc\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"InsertRecordEvent\",\"type\":\"event\"}]"};

    public static final String ABI = String.join("", ABI_ARRAY);

    public static final String FUNC_INSERTRECORD = "insertRecord";

    public static final String FUNC_GETBYINDEX = "getByIndex";

    public static final String FUNC_GETINDEX = "getIndex";

    public static final String FUNC_GETLOC = "getLoc";

    public static final String FUNC_GETOWNER = "getOwner";

    public static final String FUNC_GETBYID = "getById";

    public static final Event INSERTRECORDEVENT_EVENT = new Event("InsertRecordEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Address>() {}));
    ;

    protected TstOutV6(String contractAddress, Client client, CryptoKeyPair credential) {
        super(getBinary(client.getCryptoSuite()), contractAddress, client, credential);
    }

    public static String getBinary(CryptoSuite cryptoSuite) {
        return (cryptoSuite.getCryptoTypeConfig() == CryptoType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public TransactionReceipt insertRecord(String berthId, BigInteger outTime, BigInteger shouldPayMoney, String id, String outPicHash) {
        final Function function = new Function(
                FUNC_INSERTRECORD, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(berthId), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(outTime), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(shouldPayMoney), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(id), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(outPicHash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void insertRecord(String berthId, BigInteger outTime, BigInteger shouldPayMoney, String id, String outPicHash, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_INSERTRECORD, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(berthId), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(outTime), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(shouldPayMoney), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(id), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(outPicHash)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForInsertRecord(String berthId, BigInteger outTime, BigInteger shouldPayMoney, String id, String outPicHash) {
        final Function function = new Function(
                FUNC_INSERTRECORD, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(berthId), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(outTime), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Int256(shouldPayMoney), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(id), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(outPicHash)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple5<String, BigInteger, BigInteger, String, String> getInsertRecordInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_INSERTRECORD, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple5<String, BigInteger, BigInteger, String, String>(

                (String) results.get(0).getValue(), 
                (BigInteger) results.get(1).getValue(), 
                (BigInteger) results.get(2).getValue(), 
                (String) results.get(3).getValue(), 
                (String) results.get(4).getValue()
                );
    }

    public Tuple1<BigInteger> getInsertRecordOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_INSERTRECORD, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public TransactionReceipt getByIndex(BigInteger mIndex) {
        final Function function = new Function(
                FUNC_GETBYINDEX, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(mIndex)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void getByIndex(BigInteger mIndex, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_GETBYINDEX, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(mIndex)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForGetByIndex(BigInteger mIndex) {
        final Function function = new Function(
                FUNC_GETBYINDEX, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(mIndex)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<BigInteger> getGetByIndexInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_GETBYINDEX, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public Tuple5<String, BigInteger, BigInteger, String, String> getGetByIndexOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_GETBYINDEX, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple5<String, BigInteger, BigInteger, String, String>(

                (String) results.get(0).getValue(), 
                (BigInteger) results.get(1).getValue(), 
                (BigInteger) results.get(2).getValue(), 
                (String) results.get(3).getValue(), 
                (String) results.get(4).getValue()
                );
    }

    public BigInteger getIndex() throws ContractException {
        final Function function = new Function(FUNC_GETINDEX, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallWithSingleValueReturn(function, BigInteger.class);
    }

    public String getLoc() throws ContractException {
        final Function function = new Function(FUNC_GETLOC, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public String getOwner() throws ContractException {
        final Function function = new Function(FUNC_GETOWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public TransactionReceipt getById(String berthId) {
        final Function function = new Function(
                FUNC_GETBYID, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(berthId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public void getById(String berthId, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_GETBYID, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(berthId)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForGetById(String berthId) {
        final Function function = new Function(
                FUNC_GETBYID, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(berthId)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getGetByIdInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_GETBYID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple5<String, BigInteger, BigInteger, String, String> getGetByIdOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_GETBYID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple5<String, BigInteger, BigInteger, String, String>(

                (String) results.get(0).getValue(), 
                (BigInteger) results.get(1).getValue(), 
                (BigInteger) results.get(2).getValue(), 
                (String) results.get(3).getValue(), 
                (String) results.get(4).getValue()
                );
    }

    public List<InsertRecordEventEventResponse> getInsertRecordEventEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(INSERTRECORDEVENT_EVENT, transactionReceipt);
        ArrayList<InsertRecordEventEventResponse> responses = new ArrayList<InsertRecordEventEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            InsertRecordEventEventResponse typedResponse = new InsertRecordEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.ret = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.account = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeInsertRecordEventEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTRECORDEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeInsertRecordEventEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTRECORDEVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public static TstOutV6 load(String contractAddress, Client client, CryptoKeyPair credential) {
        return new TstOutV6(contractAddress, client, credential);
    }

    public static TstOutV6 deploy(Client client, CryptoKeyPair credential, String loc) throws ContractException {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(loc)));
        return deploy(TstOutV6.class, client, credential, getBinary(client.getCryptoSuite()), encodedConstructor);
    }

    public static class InsertRecordEventEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger ret;

        public String account;
    }
}
